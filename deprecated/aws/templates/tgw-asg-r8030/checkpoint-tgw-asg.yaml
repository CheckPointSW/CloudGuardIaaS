AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy an Auto Scaling Group of CloudGuard Security Gateways for Transit Gateway with an optional Management Server into an existing VPC (20211212)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - VPC
          - Subnets
      - Label:
          default: General Settings
        Parameters:
          - KeyPairName
          - EnableInstanceConnect
          - AllowUploadDownload
          - VolumeEncryption
          - Shell
      - Label:
          default: Check Point CloudGuard IaaS Security Gateways Auto Scaling Group Configuration
        Parameters:
          - Name
          - GatewaysInstanceType
          - GatewaysMinSize
          - GatewaysMaxSize
          - GatewaysLicense
          - GatewaysPasswordHash
          - GatewaysSIC
          - ASN
          - AdminEmail
          - EnableCloudWatch
      - Label:
          default: Check Point CloudGuard IaaS Security Management Server Configuration
        Parameters:
          - ManagementDeploy
          - ManagementInstanceType
          - ManagementLicense
          - ManagementPermissions
          - PredefinedRole
          - ManagementPasswordHash
          - GatewaysBlades
          - AdminAddressCIDR
          - GatewayManagement
          - GatewaysAddresses
      - Label:
          default: Automatic Provisioning with Security Management Server Settings
        Parameters:
          - ControlGatewayOverPrivateOrPublicAddress
          - ManagementServer
          - ConfigurationTemplate
    ParameterLabels:
      VPC:
        default: VPC
      AdminEmail:
        default: Email address
      KeyPairName:
        default: Key name
      EnableInstanceConnect:
        default: Enable AWS Instance Connect
      ManagementDeploy:
        default: Deploy Management Server
      Subnets:
        default: Subnets
      GatewaysInstanceType:
        default: Instance type
      GatewaysMinSize:
        default: Minimum group size
      GatewaysMaxSize:
        default: Maximum group size
      GatewaysLicense:
        default: Version & license
      GatewaysPasswordHash:
        default: Password hash
      GatewaysSIC:
        default: SIC key
      EnableCloudWatch:
        default: CloudWatch metrics
      ASN:
        default: BGP ASN
      ControlGatewayOverPrivateOrPublicAddress:
        default: Gateways addresses
      ManagementServer:
        default: Management Server
      ConfigurationTemplate:
        default: Configuration template
      Name:
        default: Name
      Shell:
        default: Admin shell
      AllowUploadDownload:
        default: Allow upload & download
      VolumeEncryption:
        default: Enable environment volume encryption
      ManagementInstanceType:
        default: Instance type
      ManagementLicense:
        default: Version & license
      ManagementPermissions:
        default: IAM role
      PredefinedRole:
        default: Existing IAM role name
      ManagementPasswordHash:
        default: Password hash
      AdminAddressCIDR:
        default: Administrator addresses
      GatewaysAddresses:
        default: Gateways addresses
      GatewayManagement:
        default: Manage Gateways
      GatewaysBlades:
        default: Default Blades
Parameters:
  VPC:
    Description: Select an existing VPC
    Type: AWS::EC2::VPC::Id
    MinLength: 1
    ConstraintDescription: You must select a VPC
  Subnets:
    Description: Select at least 2 external subnets in the VPC. If you choose to deploy a Security Management Server it will be deployed in the first subnet
    Type: List<AWS::EC2::Subnet::Id>
    MinLength: '1'
  AdminEmail:
    Description: Notifications about scaling events will be sent to this email address (optional)
    Type: String
    Default: ''
    AllowedPattern: (|([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?))
    ConstraintDescription: Must be a valid email address
  KeyPairName:
    Description: The EC2 Key Pair to allow SSH access to the instances created by this stack
    Type: AWS::EC2::KeyPair::KeyName
    MinLength: 1
    ConstraintDescription: Must be the name of an existing EC2 KeyPair
  EnableInstanceConnect:
    Description: Ec2 Instance Connect is not supported with versions prior to R80.40
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
  ManagementDeploy:
    Description: Select 'No' to use an existing Security Management Server or to deploy one later and to ignore the other parameters of this section
    Type: String
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  GatewaysInstanceType:
    Type: String
    Default: c5.xlarge
    AllowedValues:
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - c5n.large
      - c5n.xlarge
      - c5n.2xlarge
      - c5n.4xlarge
      - c5n.9xlarge
      - c5n.18xlarge
    ConstraintDescription: Must be a valid EC2 instance type
  GatewaysMinSize:
    Description: The minimal number of Security Gateways
    Default: 2
    Type: Number
    MinValue: 1
  GatewaysMaxSize:
    Description: The maximal number of Security Gateways
    Default: 5
    Type: Number
    MinValue: 1
  GatewaysLicense:
    Type: String
    Default: R80.30-PAYG-NGTP
    AllowedValues:
      - R80.20-BYOL
      - R80.20-PAYG-NGTP
      - R80.20-PAYG-NGTX
      - R80.30-BYOL
      - R80.30-PAYG-NGTP
      - R80.30-PAYG-NGTX
      - R80.40-BYOL
      - R80.40-PAYG-NGTP
      - R80.40-PAYG-NGTX
  GatewaysPasswordHash:
    Description: Admin user's password hash (use command "openssl passwd -1 PASSWORD" to get the PASSWORD's hash) (optional)
    Type: String
    Default: ''
    AllowedPattern: '[\$\./a-zA-Z0-9]*'
    NoEcho: true
  GatewaysSIC:
    Description: The Secure Internal Communication key creates trusted connections between Check Point components. Choose a random string consisting of at least 8 alphanumeric characters
    NoEcho: true
    MinLength: 8
    Type: String
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: Secure Internal Communication activation key should contain only alpha numeric characters and be at least 8 characters long
  EnableCloudWatch:
    Description: Report Check Point specific CloudWatch metrics
    Type: String
    AllowedValues:
      - true
      - false
    Default: false
  ASN:
    Description: The organization Autonomous System Number (ASN) that identifies the routing domain for the Security Gateways
    Type: String
    AllowedPattern: '[0-9]*'
    Default: 65000
  ControlGatewayOverPrivateOrPublicAddress:
    Description: Determines if the gateways are provisioned using their private or public address
    Default: private
    Type: String
    AllowedValues:
      - private
      - public
  ManagementServer:
    Description: The name that represents the Security Management Server in the automatic provisioning configuration
    Type: String
    Default: management-server
    MinLength: '1'
  ConfigurationTemplate:
    Description: A name of a gateway configuration template in the automatic provisioning configuration
    Type: String
    Default: TGW-ASG-configuration
    MinLength: '1'
  Name:
    Description: (optional)
    Type: String
    Default: Check-Point-Gateway
  Shell:
    Description: Change the admin shell to enable advanced command line configuration
    Type: String
    Default: /etc/cli.sh
    AllowedValues:
      - /etc/cli.sh
      - /bin/bash
      - /bin/csh
      - /bin/tcsh
  AllowUploadDownload:
    Description: Automatically download Blade Contracts and other important data. Improve product experience by sending data to Check Point
    Type: String
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
  VolumeEncryption:
    Description: Encrypt Environment instances volume with default AWS KMS key. Will be ignored for versions lower than R80.30
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
  ManagementInstanceType:
    Type: String
    Default: m5.xlarge
    AllowedValues:
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
    ConstraintDescription: Must be a valid EC2 instance type
  ManagementLicense:
    Type: String
    Default: R80.30-PAYG-MGMT
    AllowedValues:
      - R80.20-BYOL
      - R80.20-PAYG-MGMT
      - R80.30-BYOL
      - R80.30-PAYG-MGMT
      - R80.40-BYOL
      - R80.40-PAYG-MGMT
  ManagementPermissions:
    Type: String
    Default: Create with read permissions
    AllowedValues:
      - None (configure later)
      - Use existing (specify an existing IAM role name)
      - Create with assume role permissions (specify an STS role ARN)
      - Create with read permissions
      - Create with read-write permissions
  PredefinedRole:
    Type: String
    Default: ""
    Description: A predefined IAM role to attach to the instance profile. Ignored if IAM role is not set to 'Use existing'
  ManagementPasswordHash:
    Description: Admin user's password hash (use command "openssl passwd -1 PASSWORD" to get the PASSWORD's hash) (optional)
    Type: String
    Default: ''
    AllowedPattern: '[\$\./a-zA-Z0-9]*'
    NoEcho: true
  AdminAddressCIDR:
    Description: Allow web, SSH, and graphical clients only from this network to communicate with the Security Management Server
    Type: String
    Default: 0.0.0.0/0
    AllowedPattern: ^(([0-9]{1,3}\.){3}[0-9]{1,3}/([0-9]|[1-2][0-9]|3[0-2]))?$
  GatewaysAddresses:
    Description: Allow gateways only from this network to communicate with the Security Management Server
    Type: String
    AllowedPattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}/([0-9]|[1-2][0-9]|3[0-2])$
    Default: 0.0.0.0/0
  GatewayManagement:
    Description: Select 'Over the internet' if any of the gateways you wish to manage are not directly accessed via their private IP address
    Type: String
    Default: Locally managed
    AllowedValues:
      - Locally managed
      - Over the internet
  GatewaysBlades:
    Description: Turn on/off the Identity Awareness, CloudGuard Controller, Intrusion Prevention System, Application Control, Anti-Virus and Anti-Bot Blades (additional Blades can be manually turned on later)
    Type: String
    AllowedValues:
      - 'On'
      - 'Off'
    Default: 'On'
Conditions:
  GatewaysR80.30: !Equals
    - !Select
      - 0
      - !Split
        - '-'
        - !Ref GatewaysLicense
    - 'R80.30'
  ManagementR80.30: !Equals
    - !Select
      - 0
      - !Split
        - '-'
        - !Ref ManagementLicense
    - 'R80.30'
  GatewaysR80.40: !Equals
    - !Select
      - 0
      - !Split
        - '-'
        - !Ref GatewaysLicense
    - 'R80.40'
  ManagementR80.40: !Equals
    - !Select
      - 0
      - !Split
        - '-'
        - !Ref ManagementLicense
    - 'R80.40'
  EncVolEnv: !Or
    - !And
      - !Condition GatewaysR80.30
      - !Condition ManagementR80.30
    - !And
      - !Condition GatewaysR80.40
      - !Condition ManagementR80.30
    - !And
      - !Condition GatewaysR80.30
      - !Condition ManagementR80.40
    - !And
      - !Condition GatewaysR80.40
      - !Condition ManagementR80.40
  EnableVolumeEncryption: !And
    - !Equals
      - !Ref VolumeEncryption
      - 'true'
    - !Condition EncVolEnv
  EnableInstanceConnect: !Equals
    - !Ref EnableInstanceConnect
    - 'true'
  EnableBlades: !Equals
    - !Ref GatewaysBlades
    - 'On'
  DeployManagement: !Equals
    - !Ref ManagementDeploy
    - 'Yes'
  AllowUploadDownload: !Equals
    - !Ref AllowUploadDownload
    - 'Yes'
Resources:
  ManagementStack:
    Type: AWS::CloudFormation::Stack
    Condition: DeployManagement
    Properties:
      TemplateURL: https://cgi-cfts.s3.amazonaws.com/deprecated/management/management.json
      Parameters:
        VPC: !Ref VPC
        Subnet: !Select
          - 0
          - !Ref Subnets
        Version: !Ref ManagementLicense
        InstanceType: !Ref ManagementInstanceType
        Name: !Ref ManagementServer
        Permissions: !Ref ManagementPermissions
        PredefinedRole: !Ref PredefinedRole
        EnableInstanceConnect: !Ref EnableInstanceConnect
        KeyName: !Ref KeyPairName
        PasswordHash: !Ref ManagementPasswordHash
        VolumeEncryption: !If
          - EnableVolumeEncryption
          - 'alias/aws/ebs'
          - ''
        BootstrapScript: !Sub
          - |
            sed -i '/template_name/c\template_name: tgw-asg' /etc/cloud-version ;
            if test -d /opt/CPcme/menu/additions ; then
               /opt/CPcme/menu/additions/config-community.sh tgw-community ;
            else
               /etc/fw/scripts/autoprovision/config-community.sh tgw-community ;
            fi ;
            mgmt_cli -r true add access-layer name "Inline" ;
            mgmt_cli -r true add access-rule layer Network position 1 name "tgw-community VPN Traffic Rule" vpn.directional.1.from tgw-community vpn.directional.1.to tgw-community vpn.directional.2.from tgw-community vpn.directional.2.to External_clear action "Apply Layer" inline-layer "Inline" ;
            mgmt_cli -r true add nat-rule package standard position bottom install-on "Policy Targets" original-source All_Internet translated-source All_Internet method hide ;
            autoprov_cfg -f init AWS -mn ${ManagementServer} -tn ${ConfigurationTemplate} -cn tgw-controller -po Standard -otp ${GatewaysSIC} -r ${AWS::Region} -ver ${version} -iam -dt TGW ;
            autoprov_cfg -f set controller AWS -cn tgw-controller -sg -sv -com tgw-community ;
            autoprov_cfg -f set template -tn ${ConfigurationTemplate} -vpn -vd "" -con tgw-community ;
            enable_blades=${GatewaysBlades} ;
            if [ "$enable_blades" == "On" ] ; then
                 autoprov-cfg -f set template -tn ${ConfigurationTemplate} -ia -ips -appi -av -ab ;
                 if test -d /opt/CPsuite-R80.30 ; then
                    /opt/CPvsec-R80.30/bin/vsec on ;
                 elif test -d /opt/CPsuite-R80.20 ; then
                    /opt/CPvsec-R80.20/bin/vsec on ;
                 else
                    /opt/CPvsec-R80/bin/vsec on ;
                 fi ;
            fi
          - version: !Select
              - 0
              - !Split
                - '-'
                - !Ref GatewaysLicense
        AdminSubnet: !Ref AdminAddressCIDR
        GatewaysAddresses: !Ref GatewaysAddresses
        GatewayManagement: !Ref GatewayManagement
        Shell: !Ref Shell
        AllowUploadDownload: !If
          - AllowUploadDownload
          - 'true'
          - 'false'
        AllocatePublicAddress: true
        Hostname: mgmt-aws
  SecurityGatewaysStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://cgi-cfts.s3.amazonaws.com/deprecated/autoscale/autoscale.json
      Parameters:
        VPC: !Ref VPC
        Subnets: !Join
          - ','
          - !Ref Subnets
        MinSize: !Ref GatewaysMinSize
        MaxSize: !Ref GatewaysMaxSize
        ManagementServer: !Ref ManagementServer
        ConfigurationTemplate: !Ref ConfigurationTemplate
        Name: !Ref Name
        InstanceType: !Ref GatewaysInstanceType
        AdminEmail: !Ref AdminEmail
        KeyName: !Ref KeyPairName
        EnableInstanceConnect: !Ref EnableInstanceConnect
        PasswordHash: !Ref GatewaysPasswordHash
        SICKey: !Ref GatewaysSIC
        Shell: !Ref Shell
        License: !Ref GatewaysLicense
        AllowUploadDownload: !If
          - AllowUploadDownload
          - 'true'
          - 'false'
        VolumeEncryption: !Ref VolumeEncryption
        ControlGatewayOverPrivateOrPublicAddress: !Ref ControlGatewayOverPrivateOrPublicAddress
        EnableCloudWatch: !Ref EnableCloudWatch
        BootstrapScript: !Sub
          |
          sed -i '/template_name/c\template_name: autoscale-tgw' /etc/cloud-version ;
          clish -c "set as ${ASN}" -s ;
Outputs:
  ManagementName:
    Description: The name that represents the Security Management Server
    Value: !Ref ManagementServer
  ConfigurationTemplateName:
    Description: The name that represents the configuration template. Configurations required to automatically provision the Gateways in the Auto Scaling Group, such as what Security Policy to install and which Blades to enable, will be placed under this template name
    Value: !Ref ConfigurationTemplate
  ControllerName:
    Description: The name that represents the controller. Configurations required to connect to your AWS environment, such as credentials and regions, will be placed under this controller name
    Value: tgw-controller
  ManagementPublicAddress:
    Description: The public address of the management servers
    Value: !GetAtt ManagementStack.Outputs.PublicAddress
    Condition: DeployManagement
