{
  "$schema": "https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#",
  "handler": "Microsoft.Compute.MultiVm",
  "version": "0.1.2-preview",
  "parameters": {
    "basics": [
      {
        "name": "gatewayNameUi",
        "type": "Microsoft.Common.TextBox",
        "label": "Server Name",
        "toolTip": "The name of the Check Point CloudGuard Security Management Server.",
        "constraints": {
          "required": true,
          "regex": "^[a-z0-9A-Z]{1,30}$",
          "validationMessage": "Only alphanumeric characters are allowed, and the name must be 1-30 characters long."
        }
      },
      {
        "name": "auth",
        "type": "Microsoft.Compute.CredentialsCombo",
        "label": {
          "authenticationType": "Authentication type",
          "password": "Password",
          "confirmPassword": "Confirm password",
          "sshPublicKey": "SSH public key"
        },
        "toolTip": {
          "authenticationType": "",
          "password": "The user 'admin' password",
          "sshPublicKey": "Paste an OpenSSH public key. You can generate a key pair using ssh-keygen (Linux, OS X, Cygwin) or PuttyGen (Windows)"
        },
        "constraints": {
          "required": true
        },
        "options": {
          "hideConfirmation": false,
          "hidePassword": false
        },
        "osPlatform": "Linux"
      }
    ],
    "steps": [
      {
        "name": "chkp",
        "label": "Check Point CloudGuard Security Management Server settings",
        "subLabel": {
          "preValidation": "Configure CloudGuard Security Management Server settings",
          "postValidation": "Done"
        },
        "bladeTitle": "CloudGuard Security Management settings",
        "elements": [
          {
            "name": "cloudGuardVersion",
            "type": "Microsoft.Common.DropDown",
            "label": "Check Point CloudGuard version",
            "defaultValue": "R80.30",
            "toolTip": "The version of Check Point CloudGuard.",
            "constraints": {
              "allowedValues": [
                {
                  "label": "R80.30",
                  "value": "R80.30"
                }
              ]
            }
          },
          {
            "name": "R80Offer",
            "type": "Microsoft.Common.DropDown",
            "label": "License type",
            "toolTip": "The type of license.",
            "defaultValue": "Bring Your Own License",
            "visible": "[equals(substring(steps('chkp').cloudGuardVersion,0,3), 'R80')]",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Bring Your Own License",
                  "value": "Bring Your Own License"
                },
                {
                  "label": "Pay As You Go (MGMT25)",
                  "value": "Pay As You Go (MGMT25)"
                }
              ]
            }
          },
          {
            "name": "R8030vmSizeUiBYOL",
            "type": "Microsoft.Compute.SizeSelector",
            "visible": "[and(equals(steps('chkp').cloudGuardVersion, 'R80.30'), contains(steps('chkp').R80Offer, 'Bring Your Own License'))]",
            "label": "Virtual machine size",
            "toolTip": "The VM size of the Management",
            "recommendedSizes": [
              "Standard_D3_v2"
            ],
            "constraints": {
              "allowedSizes": [
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_F2s",
                "Standard_F4s",
                "Standard_F8s",
                "Standard_F16s",
                "Standard_F4s_v2",
                "Standard_F8s_v2",
                "Standard_F16s_v2",
                "Standard_F32s_v2",
                "Standard_F64s_v2",
                "Standard_D2_v2",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_F2",
                "Standard_F4",
                "Standard_F8",
                "Standard_F16",
                "Standard_DS11_v2",
                "Standard_DS12_v2",
                "Standard_DS13_v2",
                "Standard_DS14_v2"
              ]
            },
            "osPlatform": "Linux",
            "imageReference": {
              "publisher": "checkpoint",
              "offer": "check-point-cg-stack-r8030",
              "sku": "mgmt-byol"
            },
            "count": 1
          },
          {
            "name": "R8030vmSizeUiMGMT25",
            "type": "Microsoft.Compute.SizeSelector",
            "visible": "[and(equals(steps('chkp').cloudGuardVersion, 'R80.30'), contains(steps('chkp').R80Offer, '(MGMT25)'))]",
            "label": "Virtual machine size",
            "toolTip": "The VM size of the Management",
            "recommendedSizes": [
              "Standard_D3_v2"
            ],
            "constraints": {
              "allowedSizes": [
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_F2s",
                "Standard_F4s",
                "Standard_F8s",
                "Standard_F16s",
                "Standard_F4s_v2",
                "Standard_F8s_v2",
                "Standard_F16s_v2",
                "Standard_F32s_v2",
                "Standard_F64s_v2",
                "Standard_D2_v2",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_F2",
                "Standard_F4",
                "Standard_F8",
                "Standard_F16",
                "Standard_DS11_v2",
                "Standard_DS12_v2",
                "Standard_DS13_v2",
                "Standard_DS14_v2"
              ]
            },
            "osPlatform": "Linux",
            "imageReference": {
              "publisher": "checkpoint",
              "offer": "check-point-cg-stack-r8030",
              "sku": "mgmt-25"
            },
            "count": 1
          },
          {
            "name": "managementGUIClientNetwork",
            "type": "Microsoft.Common.TextBox",
            "label": "Allowed GUI clients",
            "toolTip": "GUI clients network CIDR",
            "defaultValue": "0.0.0.0/0",
            "constraints": {
              "required": true,
              "regex": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
              "validationMessage": "Enter a valid IPv4 network CIDR"
            }
          },
          {
            "name": "bootstrapScript",
            "type": "Microsoft.Common.FileUpload",
            "label": "Bootstrap script",
            "toolTip": "An optional script to run on the initial boot",
            "constraints": {
              "required": false,
              "accept": ".sh,text/plain"
            },
            "options": {
              "multiple": false,
              "uploadMode": "file",
              "openMode": "text",
              "encoding": "UTF-8"
            }
          },
          {
            "name": "allowUploadDownload",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "Allow download from/upload to Check Point",
            "defaultValue": "Yes",
            "toolTip": "Automatically download Blade Contracts and other important data. Improve product experience by sending data to Check Point",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Yes",
                  "value": "true"
                },
                {
                  "label": "No",
                  "value": "false"
                }
              ]
            }
          },
          {
            "name": "additionalDiskSizeGB",
            "type": "Microsoft.Common.TextBox",
            "label": "Additional disk space (GB)",
            "defaultValue": "0",
            "toolTip": "Additional disk space (in GB), Initial disk size is 100 GB.",
            "constraints": {
              "regex": "^([0-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-2][0-9][0-9][0-9]|3[0-8][0-9][0-9]|399[0-5])$",
              "validationMessage": "Select a number between 0 and 3995"
            }
          },
          {
            "name": "VMDiskType",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "VM disk type",
            "toolTip": "Type of CloudGuard disk.",
            "visible": "[or(contains(steps('chkp').R8030vmSizeUiBYOL, 'DS'), contains(steps('chkp').R8030vmSizeUiMGMT25, 'DS'))]",
            "defaultValue": "Standard",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Standard",
                  "value": "Standard_LRS"
                },
                {
                  "label": "Premium",
                  "value": "Premium_LRS"
                }
              ]
            }
          },
          {
            "name": "useCustomImageUri",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "Use development image uri",
            "defaultValue": "No",
            "toolTip": "",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Yes",
                  "value": "Yes"
                },
                {
                  "label": "No",
                  "value": "No"
                }
              ],
              "required": true
            },
            "visible": false
          },
          {
            "name": "sourceImageVhdUri",
            "type": "Microsoft.Common.TextBox",
            "label": "Development Image URI",
            "toolTip": "The URI of the blob containing the development image",
            "constraints": {
              "required": "[equals(steps('chkp').useCustomImageUri, 'Yes')]",
              "regex": "^[a-z0-9A-Z_\\-\\.\\:\\/]{1,500}.vhd$",
              "validationMessage": "Only alphanumeric characters and '_','-','.',':','/' are allowed, the value must be 1-500 characters long and must end with .vhd. "
            },
            "visible": "[equals(steps('chkp').useCustomImageUri, 'Yes')]"
          }
        ]
      },
      {
        "name": "network",
        "label": "Network settings",
        "subLabel": {
          "preValidation": "Configure network settings",
          "postValidation": "Done"
        },
        "bladeTitle": "Network settings",
        "elements": [
          {
            "name": "virtualNetwork",
            "type": "Microsoft.Network.VirtualNetworkCombo",
            "label": {
              "virtualNetwork": "Virtual network",
              "subnets": "Subnet"
            },
            "toolTip": {
              "virtualNetwork": "Virtual Network Name",
              "subnets": "The subnet to deploy into"
            },
            "defaultValue": {
              "name": "vnet01",
              "addressPrefixSize": "/20"
            },
            "constraints": {
              "minAddressPrefixSize": "/29"
            },
            "options": {
              "hideExisting": false
            },
            "subnets": {
              "subnet1": {
                "label": "Management subnet",
                "defaultValue": {
                  "name": "Management",
                  "addressPrefixSize": "/24"
                },
                "constraints": {
                  "minAddressPrefixSize": "/29",
                  "minAddressCount": 1,
                  "requireContiguousAddresses": true
                }
              }
            }
          }
        ]
      }
    ],
    "outputs": {
      "location": "[location()]",
      "cloudGuardVersion": "[concat(steps('chkp').cloudGuardVersion, ' - ', coalesce(steps('chkp').R80Offer, 'Bring Your Own License'))]",
      "adminPassword": "[basics('auth').password]",
      "authenticationType": "[basics('auth').authenticationType]",
      "sshPublicKey": "[basics('auth').sshPublicKey]",
      "vmName": "[basics('gatewayNameUi')]",
      "vmSize": "[coalesce(steps('chkp').R8030vmSizeUiBYOL, steps('chkp').R8030vmSizeUiMGMT25)]",
      "virtualNetworkName": "[steps('network').virtualNetwork.name]",
      "virtualNetworkAddressPrefix": "[steps('network').virtualNetwork.addressPrefix]",
      "Subnet1Name": "[steps('network').virtualNetwork.subnets.subnet1.name]",
      "Subnet1Prefix": "[steps('network').virtualNetwork.subnets.subnet1.addressPrefix]",
      "Subnet1StartAddress": "[steps('network').virtualNetwork.subnets.subnet1.startAddress]",
      "vnetNewOrExisting": "[steps('network').virtualNetwork.newOrExisting]",
      "virtualNetworkExistingRGName": "[steps('network').virtualNetwork.resourceGroup]",
      "managementGUIClientNetwork": "[steps('chkp').managementGUIClientNetwork]",
      "bootstrapScript": "[steps('chkp').bootstrapScript]",
      "allowDownloadFromUploadToCheckPoint": "[coalesce(steps('chkp').allowUploadDownload, 'true')]",
      "additionalDiskSizeGB": "[int(steps('chkp').additionalDiskSizeGB)]",
      "diskType": "[coalesce(steps('chkp').VMDiskType, 'Standard_LRS')]",
      "sourceImageVhdUri": "[coalesce(steps('chkp').sourceImageVhdUri, 'noCustomUri')]"
    }
  }
}
