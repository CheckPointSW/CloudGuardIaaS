{
  "$schema": "https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#",
  "handler": "Microsoft.Compute.MultiVm",
  "version": "0.1.2-preview",
  "parameters": {
    "basics": [
      {
        "name": "gatewayScaleSetNameUi",
        "type": "Microsoft.Common.TextBox",
        "label": "Gateway scale set name",
        "toolTip": "The name of the Check Point Security Gateway Scale Set.",
        "constraints": {
          "required": true,
          "regex": "^[a-z0-9A-Z]{1,30}$",
          "validationMessage": "Only alphanumeric characters are allowed, and the name must be 1-30 characters long."
        }
      },
      {
        "name": "auth",
        "type": "Microsoft.Compute.CredentialsCombo",
        "label": {
          "authenticationType": "Authentication type",
          "password": "Password",
          "confirmPassword": "Confirm password",
          "sshPublicKey": "SSH public key"
        },
        "toolTip": {
          "authenticationType": "",
          "password": "The user 'admin' password",
          "sshPublicKey": "Paste an OpenSSH public key. You can generate a key pair using ssh-keygen (Linux, OS X, Cygwin) or PuttyGen (Windows)"
        },
        "constraints": {
          "required": true
        },
        "options": {
          "hideConfirmation": false,
          "hidePassword": false
        },
        "osPlatform": "Linux"
      },
      {
        "name": "vmCount",
        "type": "Microsoft.Common.TextBox",
        "label": "Initial number of gateways",
        "defaultValue": "2",
        "toolTip": "The initial number of gateways",
        "constraints": {
          "required": true,
          "regex": "^[1-9][0-9]{0,1}$",
          "validationMessage": "Please enter a number in the range 1-99."
        }
      },
      {
        "name": "maxVmCount",
        "type": "Microsoft.Common.TextBox",
        "label": "Maximum number of gateways",
        "defaultValue": "10",
        "toolTip": "The maxiumum number of gateways",
        "constraints": {
          "required": true,
          "regex": "^[1-9][0-9]{0,1}$",
          "validationMessage": "Please enter a number in the range 1-99."
        }
      },
      {
        "name": "managementServer",
        "type": "Microsoft.Common.TextBox",
        "label": "Management name",
        "toolTip": "The name of the management server as it appears in the configuration file",
        "constraints": {
          "required": true,
          "validationMessage": "Field cannot be empty."
        }
      },
      {
        "name": "configurationTemplate",
        "type": "Microsoft.Common.TextBox",
        "label": "Policy template name",
        "toolTip": "A name of a template as it appears in the configuration file",
        "constraints": {
          "required": true,
          "validationMessage": "Field cannot be empty."
        }
      },
      {
        "name": "adminEmail",
        "type": "Microsoft.Common.TextBox",
        "label": "Administrator email address",
        "defaultValue": "",
        "toolTip": "An email address to notify about scaling operations",
        "constraints": {
          "required": false,
          "regex": "^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$",
          "validationMessage": "Leave empty or enter a valid email address."
        }
      }
    ],
    "steps": [
      {
        "name": "chkp",
        "label": "Check Point CloudGuard settings",
        "subLabel": {
          "preValidation": "Configure CloudGuard settings",
          "postValidation": "Done"
        },
        "bladeTitle": "CloudGuard settings",
        "elements": [
          {
            "name": "vsecVersion",
            "type": "Microsoft.Common.DropDown",
            "label": "Check Point CloudGuard version",
            "defaultValue": "R77.30",
            "toolTip": "The version of Check Point CloudGuard.",
            "constraints": {
              "allowedValues": [
                {
                  "label": "R77.30",
                  "value": "R77.30"
                }
              ]
            }
          },
          {
            "name": "R7730Offer",
            "type": "Microsoft.Common.DropDown",
            "label": "License type",
            "toolTip": "The type of license.",
            "defaultValue": "Bring Your Own License",
            "visible": "[and(not(or(equals(substring(location(), 0, 5), 'usgov'), equals(substring(location(), 0, 5), 'usdod'))), equals(steps('chkp').vsecVersion, 'R77.30'))]",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Bring Your Own License",
                  "value": "Bring Your Own License"
                },
                {
                  "label": "Pay As You Go (NGTP)",
                  "value": "Pay As You Go (NGTP)"
                }
              ]
            }
          },
          {
            "name": "R7730vmSizeUiBYOL",
            "type": "Microsoft.Compute.SizeSelector",
            "visible": "[and(equals(steps('chkp').vsecVersion, 'R77.30'), or(or(equals(substring(location(), 0, 5), 'usgov'), equals(substring(location(), 0, 5), 'usdod')), contains(steps('chkp').R7730Offer, 'Bring Your Own License')))]",
            "label": "Virtual machine size",
            "toolTip": "The VM size of the Security Gateway",
            "recommendedSizes": [
              "Standard_D3_v2",
              "Standard_D3",
              "Standard_DS3"
            ],
            "constraints": {
              "excludedSizes": [
                "Basic_A0",
                "Basic_A1",
                "Basic_A2",
                "Basic_A3",
                "Standard_A0",
                "Standard_A1",
                "Standard_A1_v2",
                "Standard_A2",
                "Standard_A5",
                "Standard_G1",
                "Standard_GS1",
                "Standard_H8",
                "Standard_H16",
                "Standard_H8m",
                "Standard_H16m",
                "Standard_H16",
                "Standard_H16m",
                "Standard_NV6",
                "Standard_NV12",
                "Standard_NV24",
                "Standard_NC6",
                "Standard_NC12",
                "Standard_NC24",
                "Standard_NC24"
              ]
            },
            "osPlatform": "Linux",
            "imageReference": {
              "publisher": "checkpoint",
              "offer": "check-point-r77-10",
              "sku": "sg-byol"
            },
            "count": "[basics('vmCount')]"
          },
          {
            "name": "R7730vmSizeUiNGTP",
            "type": "Microsoft.Compute.SizeSelector",
            "visible": "[and(equals(steps('chkp').vsecVersion, 'R77.30'), contains(steps('chkp').R7730Offer, '(NGTP)'))]",
            "label": "Virtual machine size",
            "toolTip": "The VM size of the Security Gateway",
            "recommendedSizes": [
              "Standard_D3_v2",
              "Standard_D3",
              "Standard_DS3"
            ],
            "constraints": {
              "excludedSizes": [
                "Basic_A0",
                "Basic_A1",
                "Basic_A2",
                "Basic_A3",
                "Standard_A0",
                "Standard_A1",
                "Standard_A1_v2",
                "Standard_A2",
                "Standard_A5",
                "Standard_G1",
                "Standard_GS1",
                "Standard_H8",
                "Standard_H16",
                "Standard_H8m",
                "Standard_H16m",
                "Standard_H16",
                "Standard_H16m",
                "Standard_NV6",
                "Standard_NV12",
                "Standard_NV24",
                "Standard_NC6",
                "Standard_NC12",
                "Standard_NC24",
                "Standard_NC24"
              ]
            },
            "osPlatform": "Linux",
            "imageReference": {
              "publisher": "checkpoint",
              "offer": "check-point-r77-10",
              "sku": "sg-ngtp"
            },
            "count": "[basics('vmCount')]"
          },
          {
            "name": "sicKeyUi",
            "type": "Microsoft.Common.PasswordBox",
            "label": {
              "password": "SIC Key",
              "confirmPassword": "Confirm SIC Key"
            },
            "toolTip": "Set the Secure Internal Communication one time secret used to set up trust between the gateway and the management server.",
            "constraints": {
              "required": true,
              "regex": "^[a-z0-9A-Z]{8,30}$",
              "validationMessage": "Only alphanumeric characters are allowed, and the value must be 8-30 characters long."
            },
            "options": {
              "hideConfirmation": true
            }
          },
          {
            "name": "bootstrapScript",
            "type": "Microsoft.Common.FileUpload",
            "label": "Bootstrap script",
            "toolTip": "An optional script to run on the initial boot",
            "constraints": {
              "required": false,
              "accept": ".sh,text/plain"
            },
            "options": {
              "multiple": false,
              "uploadMode": "file",
              "openMode": "text",
              "encoding": "UTF-8"
            }
          },
          {
            "name": "allowUploadDownload",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "Allow download from/upload to Check Point",
            "defaultValue": "Yes",
            "toolTip": "Automatically download Blade Contracts and other important data. Improve product experience by sending data to Check Point",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Yes",
                  "value": "true"
                },
                {
                  "label": "No",
                  "value": "false"
                }
              ]
            }
          },
          {
            "name": "VMDiskType",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "VM disk type",
            "toolTip": "Type of vSEC disk.",
            "visible": "[and(not(or(equals(substring(location(), 0, 5), 'usgov'), equals(substring(location(), 0, 5), 'usdod'))), or(contains(steps('chkp').R7730vmSizeUiBYOL, 'DS'), contains(steps('chkp').R7730vmSizeUiNGTP, 'DS')))]",
            "defaultValue": "Standard",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Standard",
                  "value": "Standard_LRS"
                },
                {
                  "label": "Premium",
                  "value": "Premium_LRS"
                }
              ]
            }
          }
        ]
      },
      {
        "name": "network",
        "label": "Network settings",
        "subLabel": {
          "preValidation": "Configure network settings",
          "postValidation": "Done"
        },
        "bladeTitle": "Network settings",
        "elements": [
          {
            "name": "virtualNetwork",
            "type": "Microsoft.Network.VirtualNetworkCombo",
            "label": {
              "virtualNetwork": "Virtual network",
              "subnets": "Subnet"
            },
            "toolTip": {
              "virtualNetwork": "Virtual Network Name",
              "subnets": "The subnet to deploy into"
            },
            "defaultValue": {
              "name": "vnet01",
              "addressPrefixSize": "/16"
            },
            "constraints": {
              "minAddressPrefixSize": "/25"
            },
            "options": {
              "hideExisting": false
            },
            "subnets": {
              "subnet1": {
                "label": "VMSS subnet",
                "defaultValue": {
                  "name": "VMSS-Subnet",
                  "addressPrefixSize": "/24"
                },
                "constraints": {
                  "minAddressPrefixSize": "/29",
                  "minAddressCount": "[basics('maxVmCount')]",
                  "requireContiguousAddresses": false
                }
              }
            }
          }
        ]
      }
    ],
    "outputs": {
      "location": "[location()]",
      "instanceCount": "[basics('vmCount')]",
      "maxInstanceCount": "[basics('maxVmCount')]",
      "managementServer": "[basics('managementServer')]",
      "configurationTemplate": "[basics('configurationTemplate')]",
      "adminEmail": "[basics('adminEmail')]",
      "vsecVersion": "[concat(steps('chkp').vsecVersion, ' - ', coalesce(steps('chkp').R7730Offer, 'Bring Your Own License'))]",
      "adminPassword": "[basics('auth').password]",
      "authenticationType": "[basics('auth').authenticationType]",
      "sshPublicKey": "[basics('auth').sshPublicKey]",
      "vmName": "[basics('gatewayScaleSetNameUi')]",
      "vmSize": "[coalesce(steps('chkp').R7730vmSizeUiBYOL, steps('chkp').R7730vmSizeUiNGTP)]",
      "sicKey": "[steps('chkp').sicKeyUi]",
      "virtualNetworkName": "[steps('network').virtualNetwork.name]",
      "virtualNetworkAddressPrefix": "[steps('network').virtualNetwork.addressPrefix]",
      "subnet1Name": "[steps('network').virtualNetwork.subnets.subnet1.name]",
      "subnet1Prefix": "[steps('network').virtualNetwork.subnets.subnet1.addressPrefix]",
      "vnetNewOrExisting": "[steps('network').virtualNetwork.newOrExisting]",
      "virtualNetworkExistingRGName": "[steps('network').virtualNetwork.resourceGroup]",
      "bootstrapScript": "[steps('chkp').bootstrapScript]",
      "allowDownloadFromUploadToCheckPoint": "[coalesce(steps('chkp').allowUploadDownload, 'true')]",
      "diskType": "[coalesce(steps('chkp').VMDiskType, 'Standard_LRS')]"
    }
  }
}

