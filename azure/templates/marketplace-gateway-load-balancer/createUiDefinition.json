{
  "$schema": "https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#",
  "handler": "Microsoft.Compute.MultiVm",
  "version": "0.1.2-preview",
  "parameters": {
    "basics": [
      {
        "name": "publicPreviewInfoBox",
        "type": "Microsoft.Common.InfoBox",
        "visible": true,
        "options": {
          "icon": "Warning",
          "text": "This solution is currently supported as a public preview, the purpose of this is to obtain feedback prior to the full commercial release of such product, solution or service. The following terms will apply in addition to the general terms and conditions. Any solution released under Public Preview:\n\n1. Is excluded from the Service Level Agreement.\n\n2. May not be covered by customer support.\n\n3. May be changed or discontinued by Check Point Software Technologies at any time without notice."
        }
      },
      {
        "name": "basics settings text block",
        "type": "Microsoft.Common.TextBlock",
        "visible": true,
        "options": {
          "text": "Please follow the CloudGuard Network for Azure VMSS Gateway Load Balancer Public Preview R81.10 and Higher Administration Guide.",
          "link": {
            "label": "Administration Guide",
            "uri": "https://sc1.checkpoint.com/documents/IaaS/WebAdminGuides/EN/CP_Azure_VMSS_GWLB/Default.htm"
          }
        }
      },
      {
        "name": "gatewayScaleSetNameUi",
        "type": "Microsoft.Common.TextBox",
        "label": "Gateway scale set name",
        "toolTip": "The name of the Check Point Security Gateway Scale Set.",
        "constraints": {
          "required": true,
          "regex": "^[a-z0-9A-Z]{1,30}$",
          "validationMessage": "Only alphanumeric characters are allowed, and the name must be 1-30 characters long."
        }
      },
      {
        "name": "auth",
        "type": "Microsoft.Compute.CredentialsCombo",
        "label": {
          "authenticationType": "Authentication type",
          "password": "Password",
          "confirmPassword": "Confirm password",
          "sshPublicKey": "SSH public key"
        },
        "toolTip": {
          "password": "The user 'admin' password",
          "sshPublicKey": "Paste an OpenSSH public key. You can generate a key pair using ssh-keygen (Linux, OS X, Cygwin) or PuttyGen (Windows)"
        },
        "constraints": {
          "required": true
        },
        "options": {
          "hideConfirmation": false,
          "hidePassword": false
        },
        "osPlatform": "Linux"
      }
    ],
    "steps": [
      {
        "name": "autoprovision",
        "label": "Check Point VMSS settings",
        "subLabel": {
          "preValidation": "Configure CloudGuard VMSS settings",
          "postValidation": "Done"
        },
        "bladeTitle": "CloudGuard VMSS settings",
        "elements": [
          {
            "name": "upgrading",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "Are you upgrading your CloudGuard VMSS solution?",
            "defaultValue": "No",
            "toolTip": "Select 'Yes' if you are upgrading your CloudGuard VMSS solution.",
            "constraints": {
              "allowedValues": [
                {
                  "label": "No",
                  "value": "no"
                },
                {
                  "label": "Yes",
                  "value": "yes"
                }
              ]
            }
          },
          {
            "name": "upgradeVmssInfoBox",
            "type": "Microsoft.Common.InfoBox",
            "visible": "[equals(steps('autoprovision').upgrading, 'yes')]",
            "options": {
              "icon": "Warning",
              "text": "All the configurations below must be similar to the existing CloudGuard VMSS solution.\n\nNote that the target load balancers are the ones connected to your existing CloudGuard VMSS solution.\n\nSee the Deployment Guide for more information."
            }
          },
          {
            "name": "vmCount",
            "type": "Microsoft.Common.TextBox",
            "label": "Initial number of gateways",
            "defaultValue": "2",
            "toolTip": "The initial number of gateways",
            "constraints": {
              "required": true,
              "regex": "^[1-9][0-9]{0,1}$",
              "validationMessage": "Please enter a number in the range 1-99."
            }
          },
          {
            "name": "maxVmCount",
            "type": "Microsoft.Common.TextBox",
            "label": "Maximum number of gateways",
            "defaultValue": "10",
            "toolTip": "The maximum number of gateways",
            "constraints": {
              "required": true,
              "regex": "^[1-9][0-9]{0,1}$",
              "validationMessage": "Please enter a number in the range 1-99."
            }
          },
          {
            "name": "numGwsValidation",
            "type": "Microsoft.Common.InfoBox",
            "visible": "[greater(steps('autoprovision').vmCount, steps('autoprovision').maxVmCount)]",
            "options": {
              "icon": "Error",
              "text": "Maximum number of gateways is lower than initial number of gateways"
            }
          },
          {
            "name": "managementServer",
            "type": "Microsoft.Common.TextBox",
            "label": "Management name",
            "toolTip": "The name of the management server as it appears in the configuration file",
            "constraints": {
              "required": true,
              "regex": "^[a-z0-9A-Z_\\-]{1,30}$",
              "validationMessage": "Field cannot be empty. Only alphanumeric characters or '_'/'-' are allowed, and the name must be 1-30 characters long."
            }
          },
          {
            "name": "configurationTemplateInfoBox",
            "type": "Microsoft.Common.InfoBox",
            "visible": "[equals(steps('autoprovision').upgrading, 'yes')]",
            "options": {
              "icon": "Info",
              "text": "Use a different configuration template name than in your existing CloudGuard VMSS solution."
            }
          },
          {
            "name": "configurationTemplate",
            "type": "Microsoft.Common.TextBox",
            "label": "Configuration template name",
            "toolTip": "The configuration template name as it appears in the configuration file",
            "constraints": {
              "required": true,
              "regex": "^[a-z0-9A-Z_\\-]{1,30}$",
              "validationMessage": "Field cannot be empty. Only alphanumeric characters or '_'/'-' are allowed, and the name must be 1-30 characters long."
            }
          },
          {
            "name": "adminEmail",
            "type": "Microsoft.Common.TextBox",
            "label": "Administrator email address",
            "defaultValue": "",
            "toolTip": "An email address to notify about scaling operations",
            "constraints": {
              "required": false,
              "regex": "^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$",
              "validationMessage": "Leave empty or enter a valid email address."
            }
          },
          {
            "name": "appLoadDistribution",
            "type": "Microsoft.Common.DropDown",
            "label": "Gateway Load Balancer session persistence",
            "defaultValue": "None (5-tuple)",
            "toolTip": "The load balancing distribution method for the Gateway Load Balancer.",
            "visible": true,
            "constraints": {
              "allowedValues": [
                {
                  "label": "None (5-tuple)",
                  "value": "Default"
                },
                {
                  "label": "Client IP (2-tuple)",
                  "value": "SourceIP"
                },
                {
                  "label": "Client IP and protocol (3-tuple)",
                  "value": "SourceIPProtocol"
                }
              ]
            }
          },
          {
            "name": "instanceLevelPublicIP",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "Deploy the VMSS with instance level Public IP address",
            "defaultValue": "No",
            "toolTip": "If selected 'Yes', then each VMSS instance will have its own public IP address.",
            "constraints": {
              "allowedValues": [
                {
                  "label": "No",
                  "value": "no"
                },
                {
                  "label": "Yes",
                  "value": "yes"
                }
              ]
            }
          },
          {
            "name": "lbsTargetRGName",
            "type": "Microsoft.Common.TextBox",
            "visible": "[equals(steps('autoprovision').upgrading, 'yes')]",
            "label": "Target load balancers resource group name",
            "defaultValue": "",
            "toolTip": "The name of the Target Load Balancers Resource Group.",
            "constraints": {
              "required": true,
              "regex": "^[a-z0-9A-Z_\\-\\.\\/\\(\\)]",
              "validationMessage": "Resource Group only allow alphanumeric characters, periods, underscores, hyphens, slash, and parenthesis"
            }
          },
          {
            "name": "lbResourceId",
            "type": "Microsoft.Common.TextBox",
            "visible": "[equals(steps('autoprovision').upgrading, 'yes')]",
            "label": "Target gateway load balancer resource ID",
            "defaultValue": "",
            "toolTip": "The Resource ID of the Target Gateway Load Balancer.",
            "constraints": {
              "required": true,
              "regex": "^[a-z0-9A-Z_\\-\\.\\/\\(\\)]",
              "validationMessage": "Resource Id only allow alphanumeric characters, periods, underscores, hyphens, slash, and parenthesis"
            }
          },
          {
            "name": "lbInfoBox",
            "type": "Microsoft.Common.InfoBox",
            "visible": "[equals(steps('autoprovision').upgrading, 'yes')]",
            "options": {
              "icon": "Info",
              "text": "Make sure you have created a new backend address pool for the target gateway load balancer."
            }
          },
          {
            "name": "lbTargetBEAddressPoolName",
            "type": "Microsoft.Common.TextBox",
            "visible": "[equals(steps('autoprovision').upgrading, 'yes')]",
            "label": "Gateway load balancer's new backend pool name",
            "toolTip": "The name of the new Target Gateway Load Balancer's Backend Pool.",
            "constraints": {
              "required": true,
              "regex": "^[a-z0-9A-Z_\\-\\.\\/\\(\\)]",
              "validationMessage": "Only alphanumeric characters, periods, underscores, hyphens, slash, and parenthesis are allowed"
            }
          },
          {
            "name": "mgmtInterfaceOpt1",
            "type": "Microsoft.Common.DropDown",
            "label": "Management interface and IP address",
            "defaultValue": "Frontend NIC's public IP address",
            "visible": "[equals(steps('autoprovision').instanceLevelPublicIP, 'yes')]",
            "toolTip": "Manage the Gateways in the Scale Set via the instance's external (eth0) or internal (eth1) NIC and with public or private IP.",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Frontend NIC's public IP address",
                  "value": "eth0-public"
                },
                {
                  "label": "Frontend NIC's private IP address",
                  "value": "eth0-private"
                }
              ]
            }
          },
          {
            "name": "mgmtIPaddress",
            "type": "Microsoft.Common.TextBox",
            "label": "Management Server IP address",
            "toolTip": "The IP address used to manage the VMSS instances.",
            "visible": "[equals(steps('autoprovision').mgmtInterfaceOpt1, 'eth0-private')]",
            "constraints": {
              "regex": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
              "required": true,
              "validationMessage": "Please enter a valid IP address"
            }
          },
          {
            "name": "availabilityZonesNum",
            "type": "Microsoft.Common.DropDown",
            "label": "Number of Availability Zones to use",
            "defaultValue": "None",
            "toolTip": "The number of avalability zones to use for the scale set. Note that the load balancers and their IP addresses will be zone redundant in any case.",
            "visible": "[contains(' australiaeast brazilsouth canadacentral centralus eastasia eastus eastus2 francecentral germanywestcentral japaneast koreacentral northeurope norwayeast southafricanorth southcentralus southeastasia swedencentral uksouth usgovvirginia westeurope westus2 westus3 switzerlandnorth qatarcentral centralindia uaenorth ', concat(' ', location(), ' '))]",
            "constraints": {
              "allowedValues": [
                {
                  "label": "None",
                  "value": 0
                },
                {
                  "label": "One zone",
                  "value": 1
                },
                {
                  "label": "Two zones",
                  "value": 2
                },
                {
                  "label": "Three zones",
                  "value": 3
                }
              ]
            }
          },
          {
            "name": "customMetrics",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "Enable CloudGuard metrics",
            "defaultValue": "Yes",
            "toolTip": "Enable CloudGuard metrics in order to send statuses and statistics collected from VMSS instances to the Azure Monitor service.",
            "constraints": {
              "allowedValues": [
                {
                  "label": "No",
                  "value": "no"
                },
                {
                  "label": "Yes",
                  "value": "yes"
                }
              ]
            },
            "visible": true
          }
        ]
      },
      {
        "name": "chkp",
        "label": "Check Point CloudGuard settings",
        "subLabel": {
          "preValidation": "Configure CloudGuard settings",
          "postValidation": "Done"
        },
        "bladeTitle": "CloudGuard settings",
        "elements": [
          {
            "name": "cloudGuardVersion",
            "type": "Microsoft.Common.DropDown",
            "label": "Check Point CloudGuard version",
            "defaultValue": "R81.10",
            "toolTip": "The version of Check Point CloudGuard.",
            "constraints": {
              "allowedValues": [
                {
                  "label": "R81.10",
                  "value": "R81.10"
                },
                {
                  "label": "R81.20",
                  "value": "R81.20"
                }
              ]
            }
          },
          {
            "name": "R80Offer",
            "type": "Microsoft.Common.DropDown",
            "label": "License type",
            "toolTip": "The type of license.",
            "defaultValue": "Bring Your Own License",
            "visible": true,
            "constraints": {
              "allowedValues": [
                {
                  "label": "Bring Your Own License",
                  "value": "Bring Your Own License"
                },
                {
                  "label": "Pay As You Go (NGTP)",
                  "value": "Pay As You Go (NGTP)"
                },
                {
                  "label": "Pay As You Go (NGTX)",
                  "value": "Pay As You Go (NGTX)"
                }
              ]
            }
          },
          {
            "name": "R8110vmSizeUiBYOL",
            "type": "Microsoft.Compute.SizeSelector",
            "visible": "[and(equals(steps('chkp').cloudGuardVersion, 'R81.10'), contains(steps('chkp').R80Offer, 'Bring Your Own License'))]",
            "label": "Virtual machine size",
            "toolTip": "The VM size of the Security Gateway",
            "recommendedSizes": [
              "Standard_D3_v2",
              "Standard_DS3_v2"
            ],
            "constraints": {
              "allowedSizes": [
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_F2s",
                "Standard_F4s",
                "Standard_F8s",
                "Standard_F16s",
                "Standard_D4s_v3",
                "Standard_D8s_v3",
                "Standard_D16s_v3",
                "Standard_D32s_v3",
                "Standard_D64s_v3",
                "Standard_E4s_v3",
                "Standard_E8s_v3",
                "Standard_E16s_v3",
                "Standard_E20s_v3",
                "Standard_E32s_v3",
                "Standard_E64s_v3",
                "Standard_E64is_v3",
                "Standard_F4s_v2",
                "Standard_F8s_v2",
                "Standard_F16s_v2",
                "Standard_F32s_v2",
                "Standard_F64s_v2",
                "Standard_M8ms",
                "Standard_M16ms",
                "Standard_M32ms",
                "Standard_M64ms",
                "Standard_M64s",
                "Standard_D2_v2",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_D15_v2",
                "Standard_F2",
                "Standard_F4",
                "Standard_F8",
                "Standard_F16",
                "Standard_D4_v3",
                "Standard_D8_v3",
                "Standard_D16_v3",
                "Standard_D32_v3",
                "Standard_D64_v3",
                "Standard_E4_v3",
                "Standard_E8_v3",
                "Standard_E16_v3",
                "Standard_E20_v3",
                "Standard_E32_v3",
                "Standard_E64_v3",
                "Standard_E64i_v3",
                "Standard_DS11_v2",
                "Standard_DS12_v2",
                "Standard_DS13_v2",
                "Standard_DS14_v2",
                "Standard_DS15_v2"
              ]
            },
            "osPlatform": "Linux",
            "imageReference": {
              "publisher": "checkpoint",
              "offer": "check-point-cg-r8110",
              "sku": "sg-byol"
            },
            "count": "[steps('autoprovision').vmCount]"
          },
          {
            "name": "R8110vmSizeUiNGTP",
            "type": "Microsoft.Compute.SizeSelector",
            "visible": "[and(equals(steps('chkp').cloudGuardVersion, 'R81.10'), contains(steps('chkp').R80Offer, '(NGTP)'))]",
            "label": "Virtual machine size",
            "toolTip": "The VM size of the Security Gateway",
            "recommendedSizes": [
              "Standard_D3_v2",
              "Standard_DS3_v2"
            ],
            "constraints": {
              "allowedSizes": [
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_F2s",
                "Standard_F4s",
                "Standard_F8s",
                "Standard_F16s",
                "Standard_D4s_v3",
                "Standard_D8s_v3",
                "Standard_D16s_v3",
                "Standard_D32s_v3",
                "Standard_D64s_v3",
                "Standard_E4s_v3",
                "Standard_E8s_v3",
                "Standard_E16s_v3",
                "Standard_E20s_v3",
                "Standard_E32s_v3",
                "Standard_E64s_v3",
                "Standard_E64is_v3",
                "Standard_F4s_v2",
                "Standard_F8s_v2",
                "Standard_F16s_v2",
                "Standard_F32s_v2",
                "Standard_F64s_v2",
                "Standard_M8ms",
                "Standard_M16ms",
                "Standard_M32ms",
                "Standard_M64ms",
                "Standard_M64s",
                "Standard_D2_v2",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_D15_v2",
                "Standard_F2",
                "Standard_F4",
                "Standard_F8",
                "Standard_F16",
                "Standard_D4_v3",
                "Standard_D8_v3",
                "Standard_D16_v3",
                "Standard_D32_v3",
                "Standard_D64_v3",
                "Standard_E4_v3",
                "Standard_E8_v3",
                "Standard_E16_v3",
                "Standard_E20_v3",
                "Standard_E32_v3",
                "Standard_E64_v3",
                "Standard_E64i_v3",
                "Standard_DS11_v2",
                "Standard_DS12_v2",
                "Standard_DS13_v2",
                "Standard_DS14_v2",
                "Standard_DS15_v2"
              ]
            },
            "osPlatform": "Linux",
            "imageReference": {
              "publisher": "checkpoint",
              "offer": "check-point-cg-r8110",
              "sku": "sg-ngtp"
            },
            "count": "[steps('autoprovision').vmCount]"
          },
          {
            "name": "R8110vmSizeUiNGTX",
            "type": "Microsoft.Compute.SizeSelector",
            "visible": "[and(equals(steps('chkp').cloudGuardVersion, 'R81.10'), contains(steps('chkp').R80Offer, '(NGTX)'))]",
            "label": "Virtual machine size",
            "toolTip": "The VM size of the Security Gateway",
            "recommendedSizes": [
              "Standard_D3_v2",
              "Standard_DS3_v2"
            ],
            "constraints": {
              "allowedSizes": [
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_F2s",
                "Standard_F4s",
                "Standard_F8s",
                "Standard_F16s",
                "Standard_D4s_v3",
                "Standard_D8s_v3",
                "Standard_D16s_v3",
                "Standard_D32s_v3",
                "Standard_D64s_v3",
                "Standard_E4s_v3",
                "Standard_E8s_v3",
                "Standard_E16s_v3",
                "Standard_E20s_v3",
                "Standard_E32s_v3",
                "Standard_E64s_v3",
                "Standard_E64is_v3",
                "Standard_F4s_v2",
                "Standard_F8s_v2",
                "Standard_F16s_v2",
                "Standard_F32s_v2",
                "Standard_F64s_v2",
                "Standard_M8ms",
                "Standard_M16ms",
                "Standard_M32ms",
                "Standard_M64ms",
                "Standard_M64s",
                "Standard_D2_v2",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_D15_v2",
                "Standard_F2",
                "Standard_F4",
                "Standard_F8",
                "Standard_F16",
                "Standard_D4_v3",
                "Standard_D8_v3",
                "Standard_D16_v3",
                "Standard_D32_v3",
                "Standard_D64_v3",
                "Standard_E4_v3",
                "Standard_E8_v3",
                "Standard_E16_v3",
                "Standard_E20_v3",
                "Standard_E32_v3",
                "Standard_E64_v3",
                "Standard_E64i_v3",
                "Standard_DS11_v2",
                "Standard_DS12_v2",
                "Standard_DS13_v2",
                "Standard_DS14_v2",
                "Standard_DS15_v2"
              ]
            },
            "osPlatform": "Linux",
            "imageReference": {
              "publisher": "checkpoint",
              "offer": "check-point-cg-r8110",
              "sku": "sg-ngtx"
            },
            "count": "[steps('autoprovision').vmCount]"
          },
          {
            "name": "R8120vmSizeUiBYOL",
            "type": "Microsoft.Compute.SizeSelector",
            "visible": "[and(equals(steps('chkp').cloudGuardVersion, 'R81.20'), contains(steps('chkp').R80Offer, 'Bring Your Own License'))]",
            "label": "Virtual machine size",
            "toolTip": "The VM size of the Security Gateway",
            "recommendedSizes": [
              "Standard_DS3_v2",
              "Standard_D3_v2"
            ],
            "constraints": {
              "allowedSizes": [
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_F2s",
                "Standard_F4s",
                "Standard_F8s",
                "Standard_F16s",
                "Standard_D4s_v3",
                "Standard_D8s_v3",
                "Standard_D16s_v3",
                "Standard_D32s_v3",
                "Standard_D64s_v3",
                "Standard_E4s_v3",
                "Standard_E8s_v3",
                "Standard_E16s_v3",
                "Standard_E20s_v3",
                "Standard_E32s_v3",
                "Standard_E64s_v3",
                "Standard_E64is_v3",
                "Standard_F4s_v2",
                "Standard_F8s_v2",
                "Standard_F16s_v2",
                "Standard_F32s_v2",
                "Standard_F64s_v2",
                "Standard_M8ms",
                "Standard_M16ms",
                "Standard_M32ms",
                "Standard_M64ms",
                "Standard_M64s",
                "Standard_D2_v2",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_D15_v2",
                "Standard_F2",
                "Standard_F4",
                "Standard_F8",
                "Standard_F16",
                "Standard_D4_v3",
                "Standard_D8_v3",
                "Standard_D16_v3",
                "Standard_D32_v3",
                "Standard_D64_v3",
                "Standard_E4_v3",
                "Standard_E8_v3",
                "Standard_E16_v3",
                "Standard_E20_v3",
                "Standard_E32_v3",
                "Standard_E64_v3",
                "Standard_E64i_v3",
                "Standard_DS11_v2",
                "Standard_DS12_v2",
                "Standard_DS13_v2",
                "Standard_DS14_v2",
                "Standard_DS15_v2"
              ]
            },
            "osPlatform": "Linux",
            "imageReference": {
              "publisher": "checkpoint",
              "offer": "check-point-cg-r8120",
              "sku": "sg-byol"
            },
            "count": "[steps('autoprovision').vmCount]"
          },
          {
            "name": "R8120vmSizeUiNGTP",
            "type": "Microsoft.Compute.SizeSelector",
            "visible": "[and(equals(steps('chkp').cloudGuardVersion, 'R81.20'), contains(steps('chkp').R80Offer, '(NGTP)'))]",
            "label": "Virtual machine size",
            "toolTip": "The VM size of the Security Gateway",
            "recommendedSizes": [
              "Standard_DS3_v2",
              "Standard_D3_v2"
            ],
            "constraints": {
              "allowedSizes": [
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_F2s",
                "Standard_F4s",
                "Standard_F8s",
                "Standard_F16s",
                "Standard_D4s_v3",
                "Standard_D8s_v3",
                "Standard_D16s_v3",
                "Standard_D32s_v3",
                "Standard_D64s_v3",
                "Standard_E4s_v3",
                "Standard_E8s_v3",
                "Standard_E16s_v3",
                "Standard_E20s_v3",
                "Standard_E32s_v3",
                "Standard_E64s_v3",
                "Standard_E64is_v3",
                "Standard_F4s_v2",
                "Standard_F8s_v2",
                "Standard_F16s_v2",
                "Standard_F32s_v2",
                "Standard_F64s_v2",
                "Standard_M8ms",
                "Standard_M16ms",
                "Standard_M32ms",
                "Standard_M64ms",
                "Standard_M64s",
                "Standard_D2_v2",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_D15_v2",
                "Standard_F2",
                "Standard_F4",
                "Standard_F8",
                "Standard_F16",
                "Standard_D4_v3",
                "Standard_D8_v3",
                "Standard_D16_v3",
                "Standard_D32_v3",
                "Standard_D64_v3",
                "Standard_E4_v3",
                "Standard_E8_v3",
                "Standard_E16_v3",
                "Standard_E20_v3",
                "Standard_E32_v3",
                "Standard_E64_v3",
                "Standard_E64i_v3",
                "Standard_DS11_v2",
                "Standard_DS12_v2",
                "Standard_DS13_v2",
                "Standard_DS14_v2",
                "Standard_DS15_v2"
              ]
            },
            "osPlatform": "Linux",
            "imageReference": {
              "publisher": "checkpoint",
              "offer": "check-point-cg-r8120",
              "sku": "sg-ngtp"
            },
            "count": "[steps('autoprovision').vmCount]"
          },
          {
            "name": "R8120vmSizeUiNGTX",
            "type": "Microsoft.Compute.SizeSelector",
            "visible": "[and(equals(steps('chkp').cloudGuardVersion, 'R81.20'), contains(steps('chkp').R80Offer, '(NGTX)'))]",
            "label": "Virtual machine size",
            "toolTip": "The VM size of the Security Gateway",
            "recommendedSizes": [
              "Standard_DS3_v2",
              "Standard_D3_v2"
            ],
            "constraints": {
              "allowedSizes": [
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_F2s",
                "Standard_F4s",
                "Standard_F8s",
                "Standard_F16s",
                "Standard_D4s_v3",
                "Standard_D8s_v3",
                "Standard_D16s_v3",
                "Standard_D32s_v3",
                "Standard_D64s_v3",
                "Standard_E4s_v3",
                "Standard_E8s_v3",
                "Standard_E16s_v3",
                "Standard_E20s_v3",
                "Standard_E32s_v3",
                "Standard_E64s_v3",
                "Standard_E64is_v3",
                "Standard_F4s_v2",
                "Standard_F8s_v2",
                "Standard_F16s_v2",
                "Standard_F32s_v2",
                "Standard_F64s_v2",
                "Standard_M8ms",
                "Standard_M16ms",
                "Standard_M32ms",
                "Standard_M64ms",
                "Standard_M64s",
                "Standard_D2_v2",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_D15_v2",
                "Standard_F2",
                "Standard_F4",
                "Standard_F8",
                "Standard_F16",
                "Standard_D4_v3",
                "Standard_D8_v3",
                "Standard_D16_v3",
                "Standard_D32_v3",
                "Standard_D64_v3",
                "Standard_E4_v3",
                "Standard_E8_v3",
                "Standard_E16_v3",
                "Standard_E20_v3",
                "Standard_E32_v3",
                "Standard_E64_v3",
                "Standard_E64i_v3",
                "Standard_DS11_v2",
                "Standard_DS12_v2",
                "Standard_DS13_v2",
                "Standard_DS14_v2",
                "Standard_DS15_v2"
              ]
            },
            "osPlatform": "Linux",
            "imageReference": {
              "publisher": "checkpoint",
              "offer": "check-point-cg-r8120",
              "sku": "sg-ngtx"
            },
            "count": "[steps('autoprovision').vmCount]"
          },
          {
            "name": "adminShell",
            "type": "Microsoft.Common.DropDown",
            "label": "Default shell for the admin user",
            "defaultValue": "/etc/cli.sh",
            "toolTip": "The default shell for the admin user",
            "constraints": {
              "allowedValues": [
                {
                  "label": "/etc/cli.sh",
                  "value": "/etc/cli.sh"
                },
                {
                  "label": "/bin/bash",
                  "value": "/bin/bash"
                },
                {
                  "label": "/bin/csh",
                  "value": "/bin/csh"
                },
                {
                  "label": "/bin/tcsh",
                  "value": "/bin/tcsh"
                }
              ]
            }
          },
          {
            "name": "sicKeyUi",
            "type": "Microsoft.Common.PasswordBox",
            "label": {
              "password": "SIC Key",
              "confirmPassword": "Confirm SIC Key"
            },
            "toolTip": "Set the Secure Internal Communication one time secret used to set up trust between the gateway and the management server.",
            "constraints": {
              "required": true,
              "regex": "^[a-z0-9A-Z]{12,30}$",
              "validationMessage": "Only alphanumeric characters are allowed, and the value must be 12-30 characters long."
            },
            "options": {
              "hideConfirmation": false
            }
          },
          {
            "name": "bootstrapScript",
            "type": "Microsoft.Common.FileUpload",
            "label": "Bootstrap script",
            "toolTip": "An optional script to run on the initial boot",
            "constraints": {
              "required": false,
              "accept": ".sh,text/plain"
            },
            "options": {
              "multiple": false,
              "uploadMode": "file",
              "openMode": "text",
              "encoding": "UTF-8"
            }
          },
          {
            "name": "allowUploadDownload",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "Automatically download updates and share statistical data for product improvement purpose",
            "defaultValue": "Yes",
            "toolTip": "Automatically download Blade Contracts and other important data. Improve product experience by sending data to Check Point",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Yes",
                  "value": "true"
                },
                {
                  "label": "No",
                  "value": "false"
                }
              ]
            }
          },
          {
            "name": "VMDiskType",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "VM disk type",
            "toolTip": "Type of CloudGuard disk.",
            "visible": "[not(contains('R80.40 R81 R81.10' , steps('chkp').cloudGuardVersion))]",
            "defaultValue": "Premium",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Standard",
                  "value": "Standard_LRS"
                },
                {
                  "label": "Premium",
                  "value": "Premium_LRS"
                }
              ]
            }
          },
          {
            "name": "VMDiskTypeOldVersions",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "VM disk type",
            "toolTip": "Type of CloudGuard disk.",
            "visible": "[contains('R80.40 R81 R81.10' , steps('chkp').cloudGuardVersion)]",
            "defaultValue": "Standard",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Standard",
                  "value": "Standard_LRS"
                },
                {
                  "label": "Premium",
                  "value": "Premium_LRS"
                }
              ]
            }
          },
          {
            "name": "useCustomImageUri",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "Use development image uri",
            "defaultValue": "No",
            "toolTip": "Use custom image URI.",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Yes",
                  "value": "Yes"
                },
                {
                  "label": "No",
                  "value": "No"
                }
              ],
              "required": true
            },
            "visible": false
          },
          {
            "name": "sourceImageVhdUri",
            "type": "Microsoft.Common.TextBox",
            "label": "Development Image URI",
            "toolTip": "The URI of the blob containing the development image",
            "constraints": {
              "required": "[equals(steps('chkp').useCustomImageUri, 'Yes')]",
              "regex": "^[a-z0-9A-Z_\\-\\.\\:\\/]{1,500}.vhd$",
              "validationMessage": "Only alphanumeric characters and '_','-','.',':','/' are allowed, the value must be 1-500 characters long and must end with .vhd. "
            },
            "visible": "[equals(steps('chkp').useCustomImageUri, 'Yes')]"
          }
        ]
      },
      {
        "name": "network",
        "label": "Network settings",
        "subLabel": {
          "preValidation": "Configure network settings",
          "postValidation": "Done"
        },
        "bladeTitle": "Network settings",
        "elements": [
          {
            "name": "virtualNetwork",
            "type": "Microsoft.Network.VirtualNetworkCombo",
            "label": {
              "virtualNetwork": "Virtual network",
              "subnets": "Subnets"
            },
            "toolTip": {
              "virtualNetwork": "Virtual Network Name",
              "subnets": "The subnets to deploy into"
            },
            "defaultValue": {
              "name": "vnet01",
              "addressPrefixSize": "/16"
            },
            "constraints": {
              "minAddressPrefixSize": "/28"
            },
            "options": {
              "hideExisting": false
            },
            "subnets": {
              "subnet1": {
                "label": "VMSS Frontend subnet",
                "defaultValue": {
                  "name": "VMSS-Frontend",
                  "addressPrefixSize": "/24"
                },
                "constraints": {
                  "minAddressPrefixSize": "/29",
                  "minAddressCount": "[steps('autoprovision').maxVmCount]",
                  "requireContiguousAddresses": false
                }
              }
            },
            "visible": true
          },
          {
            "name": "NSG",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "Network Security Group",
            "defaultValue": "{}",
            "toolTip": "",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Create new",
                  "value": "new"
                },
                {
                  "label": "Existing NSG",
                  "value": "exist"
                }
              ],
              "required": true
            },
            "visible": true
          },
          {
            "name": "nsgSelector",
            "type": "Microsoft.Solutions.ResourceSelector",
            "label": "Network Security Group",
            "defaultValue": "null",
            "resourceType": "Microsoft.Network/NetworkSecurityGroups",
            "options": {
              "filter": {
                "subscription": "onBasics",
                "location": "onBasics"
              }
            },
            "constraints": {
              "required": true
            },
            "visible": "[equals(steps('network').NSG, 'exist')]"
          },
          {
            "name": "NSGName",
            "type": "Microsoft.Common.TextBox",
            "label": "Name",
            "defaultValue": "None",
            "placeholder": "",
            "multiLine": false,
            "constraints": {
              "required": "[equals(steps('network').NSG, 'new')]",
              "regex": "^[a-z0-9A-Z]{1,30}$",
              "validationMessage": "Only alphanumeric characters are allowed, and the name must be 1-30 characters long."
            },
            "visible": "[equals(steps('network').NSG, 'new')]"
          }
        ]
      },
      {
        "name": "tags",
        "label": "Tags",
        "elements": [
          {
            "name": "tagsByResource",
            "type": "Microsoft.Common.TagsByResource",
            "resources": [
              "Microsoft.Storage/storageAccounts",
              "Microsoft.Compute/virtualMachineScaleSets",
              "Microsoft.Network/routeTables",
              "Microsoft.Network/virtualNetworks",
              "Microsoft.Network/networkSecurityGroups",
              "Microsoft.Network/loadBalancers"
            ]
          }
        ]
      }
    ],
    "outputs": {
      "location": "[location()]",
      "authenticationType": "[basics('auth').authenticationType]",
      "adminPassword": "[basics('auth').password]",
      "sshPublicKey": "[basics('auth').sshPublicKey]",
      "upgrading": "[steps('autoprovision').upgrading]",
      "vmName": "[basics('gatewayScaleSetNameUi')]",
      "instanceCount": "[steps('autoprovision').vmCount]",
      "maxInstanceCount": "[steps('autoprovision').maxVmCount]",
      "managementServer": "[steps('autoprovision').managementServer]",
      "configurationTemplate": "[steps('autoprovision').configurationTemplate]",
      "adminEmail": "[steps('autoprovision').adminEmail]",
      "instanceLevelPublicIP": "[steps('autoprovision').instanceLevelPublicIP]",
      "lbsTargetRGName": "[steps('autoprovision').lbsTargetRGName]",
      "lbResourceId": "[steps('autoprovision').lbResourceId]",
      "lbTargetBEAddressPoolName": "[steps('autoprovision').lbTargetBEAddressPoolName]",
      "mgmtInterfaceOpt1": "[steps('autoprovision').mgmtInterfaceOpt1]",
      "mgmtIPaddress": "[steps('autoprovision').mgmtIPaddress]",
      "appLoadDistribution": "[steps('autoprovision').appLoadDistribution]",
      "availabilityZonesNum": "[coalesce(steps('autoprovision').availabilityZonesNum, int('0'))]",
      "customMetrics": "[steps('autoprovision').customMetrics]",
      "cloudGuardVersion": "[concat(steps('chkp').cloudGuardVersion, ' - ', coalesce(steps('chkp').R80Offer, 'Bring Your Own License'))]",
      "vmSize": "[coalesce(steps('chkp').R8110vmSizeUiBYOL, steps('chkp').R8110vmSizeUiNGTP, steps('chkp').R8110vmSizeUiNGTX, steps('chkp').R8120vmSizeUiBYOL, steps('chkp').R8120vmSizeUiNGTP, steps('chkp').R8120vmSizeUiNGTX)]",
      "sicKey": "[steps('chkp').sicKeyUi]",
      "bootstrapScript": "[steps('chkp').bootstrapScript]",
      "allowDownloadFromUploadToCheckPoint": "[coalesce(steps('chkp').allowUploadDownload, 'true')]",
      "diskType": "[if(contains('R80.40 R81 R81.10' , steps('chkp').cloudGuardVersion) , steps('chkp').VMDiskTypeOldVersions , steps('chkp').VMDiskType)]",
      "sourceImageVhdUri": "[coalesce(steps('chkp').sourceImageVhdUri, 'noCustomUri')]",
      "virtualNetworkName": "[steps('network').virtualNetwork.name]",
      "virtualNetworkAddressPrefix": "[steps('network').virtualNetwork.addressPrefix]",
      "vnetNewOrExisting": "[steps('network').virtualNetwork.newOrExisting]",
      "virtualNetworkExistingRGName": "[steps('network').virtualNetwork.resourceGroup]",
      "subnet1Name": "[steps('network').virtualNetwork.subnets.subnet1.name]",
      "subnet1Prefix": "[steps('network').virtualNetwork.subnets.subnet1.addressPrefix]",
      "subnet1StartAddress": "[steps('network').virtualNetwork.subnets.subnet1.startAddress]",
      "adminShell": "[steps('chkp').adminShell]",
      "tagsByResource": "[steps('tags').tagsByResource]",
      "deployNewNSG": "[equals(steps('network').NSG, 'new')]",
      "UseExistingNSG": "[equals(steps('network').NSG, 'exist')]",
      "ExistingNSG": "[steps('network').nsgSelector]",
      "NewNsgName": "[steps('network').NSGName]"
    }
  }
}