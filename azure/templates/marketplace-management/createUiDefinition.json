{
  "$schema": "https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#",
  "handler": "Microsoft.Compute.MultiVm",
  "version": "0.1.2-preview",
  "parameters": {
    "basics": [
      {
        "name": "chkp refrence architecture",
        "type": "Microsoft.Common.TextBlock",
        "visible": true,
        "options": {
          "text": "Please follow the Check Point Reference Architecture for Azure.",
          "link": {
            "label": "Reference Architecture Guide",
            "uri": "https://supportcenter.checkpoint.com/supportcenter/portal?eventSubmit_doGoviewsolutiondetails=&solutionid=sk109360"
          }
        }
      },
      {
        "name": "gatewayNameUi",
        "type": "Microsoft.Common.TextBox",
        "label": "Server Name",
        "toolTip": "The name of the Check Point Security Management Server.",
        "constraints": {
          "required": true,
          "regex": "^[a-z0-9A-Z]{1,30}$",
          "validationMessage": "Only alphanumeric characters are allowed, and the name must be 1-30 characters long."
        }
      },
      {
        "name": "auth",
        "type": "Microsoft.Compute.CredentialsCombo",
        "label": {
          "authenticationType": "Authentication type",
          "password": "Password",
          "confirmPassword": "Confirm password",
          "sshPublicKey": "SSH public key"
        },
        "toolTip": {
          "password": "The user 'admin' password",
          "sshPublicKey": "Paste an OpenSSH public key. You can generate a key pair using ssh-keygen (Linux, OS X, Cygwin) or PuttyGen (Windows)"
        },
        "constraints": {
          "required": true
        },
        "options": {
          "hideConfirmation": false,
          "hidePassword": false
        },
        "osPlatform": "Linux"
      }
    ],
    "steps": [
      {
        "name": "chkp",
        "label": "Check Point Security Management Server settings",
        "subLabel": {
          "preValidation": "Configure additional settings",
          "postValidation": "Done"
        },
        "bladeTitle": "Security Management settings",
        "elements": [
          {
            "name": "cloudGuardVersion",
            "type": "Microsoft.Common.DropDown",
            "label": "Check Point CloudGuard version",
            "defaultValue": "R81.10",
            "toolTip": "The version of Check Point CloudGuard.",
            "constraints": {
              "allowedValues": [
                {
                  "label": "R80.40",
                  "value": "R80.40"
                },
                {
                  "label": "R81",
                  "value": "R81"
                },
                {
                  "label": "R81.10",
                  "value": "R81.10"
                },
                {
                  "label": "R81.20",
                  "value": "R81.20"
                }
              ]
            }
          },
          {
            "name": "R80Offer",
            "type": "Microsoft.Common.DropDown",
            "label": "License type",
            "toolTip": "The type of license.",
            "defaultValue": "Bring Your Own License",
            "visible": true,
            "constraints": {
              "allowedValues": [
                {
                  "label": "Bring Your Own License",
                  "value": "Bring Your Own License"
                },
                {
                  "label": "Pay As You Go (MGMT25)",
                  "value": "Pay As You Go (MGMT25)"
                }
              ]
            }
          },
          {
            "name": "R8040vmSizeUiBYOL",
            "type": "Microsoft.Compute.SizeSelector",
            "visible": "[and(equals(steps('chkp').cloudGuardVersion, 'R80.40'), contains(steps('chkp').R80Offer, 'Bring Your Own License'))]",
            "label": "Virtual machine size",
            "toolTip": "The VM size of the Management",
            "recommendedSizes": [
              "Standard_D3_v2",
              "Standard_DS3_v2"
            ],
            "constraints": {
              "excludedSizes": [
                "Standard_A1_v2",
                "Standard_D1_v2",
                "Standard_DS1_v2",
                "Standard_F1",
                "Standard_F1s",
                "Standard_G1",
                "Standard_GS1"
              ]
            },
            "osPlatform": "Linux",
            "imageReference": {
              "publisher": "checkpoint",
              "offer": "check-point-cg-r8040",
              "sku": "mgmt-byol"
            },
            "count": 1
          },
          {
            "name": "R8040vmSizeUiMGMT25",
            "type": "Microsoft.Compute.SizeSelector",
            "visible": "[and(equals(steps('chkp').cloudGuardVersion, 'R80.40'), contains(steps('chkp').R80Offer, '(MGMT25)'))]",
            "label": "Virtual machine size",
            "toolTip": "The VM size of the Management",
            "recommendedSizes": [
              "Standard_D3_v2",
              "Standard_DS3_v2"
            ],
            "constraints": {
              "excludedSizes": [
                "Standard_A1_v2",
                "Standard_D1_v2",
                "Standard_DS1_v2",
                "Standard_F1",
                "Standard_F1s",
                "Standard_G1",
                "Standard_GS1"
              ]
            },
            "osPlatform": "Linux",
            "imageReference": {
              "publisher": "checkpoint",
              "offer": "check-point-cg-r8040",
              "sku": "mgmt-25"
            },
            "count": 1
          },
          {
            "name": "R81vmSizeUiBYOL",
            "type": "Microsoft.Compute.SizeSelector",
            "visible": "[and(equals(steps('chkp').cloudGuardVersion, 'R81'), contains(steps('chkp').R80Offer, 'Bring Your Own License'))]",
            "label": "Virtual machine size",
            "toolTip": "The VM size of the Management",
            "recommendedSizes": [
              "Standard_D3_v2",
              "Standard_DS3_v2"
            ],
            "constraints": {
              "excludedSizes": [
                "Standard_A1_v2",
                "Standard_D1_v2",
                "Standard_DS1_v2",
                "Standard_F1",
                "Standard_F1s",
                "Standard_G1",
                "Standard_GS1"
              ]
            },
            "osPlatform": "Linux",
            "imageReference": {
              "publisher": "checkpoint",
              "offer": "check-point-cg-r81",
              "sku": "mgmt-byol"
            },
            "count": 1
          },
          {
            "name": "R81vmSizeUiMGMT25",
            "type": "Microsoft.Compute.SizeSelector",
            "visible": "[and(equals(steps('chkp').cloudGuardVersion, 'R81'), contains(steps('chkp').R80Offer, '(MGMT25)'))]",
            "label": "Virtual machine size",
            "toolTip": "The VM size of the Management",
            "recommendedSizes": [
              "Standard_D3_v2",
              "Standard_DS3_v2"
            ],
            "constraints": {
              "excludedSizes": [
                "Standard_A1_v2",
                "Standard_D1_v2",
                "Standard_DS1_v2",
                "Standard_F1",
                "Standard_F1s",
                "Standard_G1",
                "Standard_GS1"
              ]
            },
            "osPlatform": "Linux",
            "imageReference": {
              "publisher": "checkpoint",
              "offer": "check-point-cg-r81",
              "sku": "mgmt-25"
            },
            "count": 1
          },
          {
            "name": "R8110vmSizeUiBYOL",
            "type": "Microsoft.Compute.SizeSelector",
            "visible": "[and(equals(steps('chkp').cloudGuardVersion, 'R81.10'), contains(steps('chkp').R80Offer, 'Bring Your Own License'))]",
            "label": "Virtual machine size",
            "toolTip": "The VM size of the Management",
            "recommendedSizes": [
              "Standard_D3_v2",
              "Standard_DS3_v2"
            ],
            "constraints": {
              "excludedSizes": [
                "Standard_A1_v2",
                "Standard_D1_v2",
                "Standard_DS1_v2",
                "Standard_F1",
                "Standard_F1s",
                "Standard_G1",
                "Standard_GS1"
              ]
            },
            "osPlatform": "Linux",
            "imageReference": {
              "publisher": "checkpoint",
              "offer": "check-point-cg-r8110",
              "sku": "mgmt-byol"
            },
            "count": 1
          },
          {
            "name": "R8110vmSizeUiMGMT25",
            "type": "Microsoft.Compute.SizeSelector",
            "visible": "[and(equals(steps('chkp').cloudGuardVersion, 'R81.10'), contains(steps('chkp').R80Offer, '(MGMT25)'))]",
            "label": "Virtual machine size",
            "toolTip": "The VM size of the Management",
            "recommendedSizes": [
              "Standard_D3_v2",
              "Standard_DS3_v2"
            ],
            "constraints": {
              "excludedSizes": [
                "Standard_A1_v2",
                "Standard_D1_v2",
                "Standard_DS1_v2",
                "Standard_F1",
                "Standard_F1s",
                "Standard_G1",
                "Standard_GS1"
              ]
            },
            "osPlatform": "Linux",
            "imageReference": {
              "publisher": "checkpoint",
              "offer": "check-point-cg-r8110",
              "sku": "mgmt-25"
            },
            "count": 1
          },
          {
            "name": "R8120vmSizeUiBYOL",
            "type": "Microsoft.Compute.SizeSelector",
            "visible": "[and(equals(steps('chkp').cloudGuardVersion, 'R81.20'), contains(steps('chkp').R80Offer, 'Bring Your Own License'))]",
            "label": "Virtual machine size",
            "toolTip": "The VM size of the Management",
            "recommendedSizes": [
              "Standard_DS3_v2",
              "Standard_D3_v2"
            ],
            "constraints": {
              "excludedSizes": [
                "Standard_A1_v2",
                "Standard_D1_v2",
                "Standard_DS1_v2",
                "Standard_F1",
                "Standard_F1s",
                "Standard_G1",
                "Standard_GS1"
              ]
            },
            "osPlatform": "Linux",
            "imageReference": {
              "publisher": "checkpoint",
              "offer": "check-point-cg-r8120",
              "sku": "mgmt-byol"
            },
            "count": 1
          },
          {
            "name": "R8120vmSizeUiMGMT25",
            "type": "Microsoft.Compute.SizeSelector",
            "visible": "[and(equals(steps('chkp').cloudGuardVersion, 'R81.20'), contains(steps('chkp').R80Offer, '(MGMT25)'))]",
            "label": "Virtual machine size",
            "toolTip": "The VM size of the Management",
            "recommendedSizes": [
              "Standard_DS3_v2",
              "Standard_D3_v2"
            ],
            "constraints": {
              "excludedSizes": [
                "Standard_A1_v2",
                "Standard_D1_v2",
                "Standard_DS1_v2",
                "Standard_F1",
                "Standard_F1s",
                "Standard_G1",
                "Standard_GS1"
              ]
            },
            "osPlatform": "Linux",
            "imageReference": {
              "publisher": "checkpoint",
              "offer": "check-point-cg-r8120",
              "sku": "mgmt-25"
            },
            "count": 1
          },
          {
            "name": "installationType",
            "type": "Microsoft.Common.DropDown",
            "label": "Installation type",
            "defaultValue": "Management",
            "toolTip": "Select the type of deployment",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Management",
                  "value": "management"
                },
                {
                  "label": "Configure manually",
                  "value": "custom"
                }
              ]
            }
          },
          {
            "name": "adminShell",
            "type": "Microsoft.Common.DropDown",
            "label": "Default shell for the admin user",
            "defaultValue": "/etc/cli.sh",
            "toolTip": "The default shell for the admin user",
            "constraints": {
              "allowedValues": [
                {
                  "label": "/etc/cli.sh",
                  "value": "/etc/cli.sh"
                },
                {
                  "label": "/bin/bash",
                  "value": "/bin/bash"
                },
                {
                  "label": "/bin/csh",
                  "value": "/bin/csh"
                },
                {
                  "label": "/bin/tcsh",
                  "value": "/bin/tcsh"
                }
              ]
            }
          },
          {
            "name": "managementGUIClientNetwork",
            "type": "Microsoft.Common.TextBox",
            "label": "Allowed GUI clients",
            "toolTip": "GUI clients network CIDR",
            "constraints": {
              "required": true,
              "regex": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
              "validationMessage": "Enter a valid IPv4 network CIDR"
            },
            "visible": "[equals(steps('chkp').installationType, 'management')]"
          },
          {
            "name": "bootstrapScript",
            "type": "Microsoft.Common.FileUpload",
            "label": "Bootstrap script",
            "toolTip": "An optional script to run on the initial boot",
            "constraints": {
              "required": false,
              "accept": ".sh,text/plain"
            },
            "options": {
              "multiple": false,
              "uploadMode": "file",
              "openMode": "text",
              "encoding": "UTF-8"
            }
          },
          {
            "name": "VMDiskType",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "VM disk type",
            "toolTip": "Type of CloudGuard disk.",
            "visible": "[not(contains('R80.40 R81 R81.10' , steps('chkp').cloudGuardVersion))]",
            "defaultValue": "Premium",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Standard",
                  "value": "Standard_LRS"
                },
                {
                  "label": "Premium",
                  "value": "Premium_LRS"
                }
              ]
            }
          },
          {
            "name": "VMDiskTypeOldVersions",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "VM disk type",
            "toolTip": "Type of CloudGuard disk.",
            "visible": "[contains('R80.40 R81 R81.10' , steps('chkp').cloudGuardVersion)]",
            "defaultValue": "Standard",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Standard",
                  "value": "Standard_LRS"
                },
                {
                  "label": "Premium",
                  "value": "Premium_LRS"
                }
              ]
            }
          },
          {
            "name": "enableApi",
            "type": "Microsoft.Common.DropDown",
            "label": "Accept Management API calls",
            "defaultValue": "Management server only",
            "toolTip": "Select the type of the Management API calls",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Management server only",
                  "value": "management_only"
                },
                {
                  "label": "All IP Addresses that can be used for GUI clients",
                  "value": "gui_clients"
                },
                {
                  "label": "All IP addresses",
                  "value": "all"
                }
              ]
            },
            "visible": "[not(or(equals(steps('chkp').cloudGuardVersion, 'R81'), equals(steps('chkp').cloudGuardVersion, 'R80.40'))))]"
          },
          {
            "visible": "[equals(steps('chkp').installationType, 'management')]",
            "name": "allowUploadDownload",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "Automatically download updates and share statistical data for product improvement purpose",
            "defaultValue": "Yes",
            "toolTip": "Automatically download Blade Contracts and other important data. Improve product experience by sending data to Check Point",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Yes",
                  "value": "true"
                },
                {
                  "label": "No",
                  "value": "false"
                }
              ]
            }
          },
          {
            "name": "additionalDiskSizeGB",
            "type": "Microsoft.Common.TextBox",
            "label": "Additional disk space (GB)",
            "defaultValue": "0",
            "toolTip": "Additional disk space (in GB), Initial disk size is 100 GB.",
            "constraints": {
              "regex": "^([0-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-2][0-9][0-9][0-9]|3[0-8][0-9][0-9]|399[0-5])$",
              "validationMessage": "Select a number between 0 and 3995"
            }
          },
          {
            "name": "useCustomImageUri",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "Use development image uri",
            "defaultValue": "No",
            "toolTip": "Use custom image URI.",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Yes",
                  "value": "Yes"
                },
                {
                  "label": "No",
                  "value": "No"
                }
              ],
              "required": true
            },
            "visible": false
          },
          {
            "name": "sourceImageVhdUri",
            "type": "Microsoft.Common.TextBox",
            "label": "Development Image URI",
            "toolTip": "The URI of the blob containing the development image",
            "constraints": {
              "required": "[equals(steps('chkp').useCustomImageUri, 'Yes')]",
              "regex": "^[a-z0-9A-Z_\\-\\.\\:\\/]{1,500}.vhd$",
              "validationMessage": "Only alphanumeric characters and '_','-','.',':','/' are allowed, the value must be 1-500 characters long and must end with .vhd. "
            },
            "visible": "[equals(steps('chkp').useCustomImageUri, 'Yes')]"
          }
        ]
      },
      {
        "name": "network",
        "label": "Network settings",
        "subLabel": {
          "preValidation": "Configure network settings",
          "postValidation": "Done"
        },
        "bladeTitle": "Network settings",
        "elements": [
          {
            "name": "virtualNetwork",
            "type": "Microsoft.Network.VirtualNetworkCombo",
            "label": {
              "virtualNetwork": "Virtual network",
              "subnets": "Subnet"
            },
            "toolTip": {
              "virtualNetwork": "Virtual Network Name",
              "subnets": "The subnet to deploy into"
            },
            "defaultValue": {
              "name": "vnet01",
              "addressPrefixSize": "/20"
            },
            "constraints": {
              "minAddressPrefixSize": "/29"
            },
            "options": {
              "hideExisting": false
            },
            "subnets": {
              "subnet1": {
                "label": "Management subnet",
                "defaultValue": {
                  "name": "Management",
                  "addressPrefixSize": "/24"
                },
                "constraints": {
                  "minAddressPrefixSize": "/29",
                  "minAddressCount": 1,
                  "requireContiguousAddresses": true
                }
              }
            }
          },
          {
            "name": "NSG",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "Network Security Group",
            "toolTip": "Choose between using an existing NSG or using a new NSG",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Create new",
                  "value": true
                },
                {
                  "label": "Existing NSG",
                  "value": false
                }
              ],
              "required": true
            },
            "visible": true
          },
          {
            "name": "nsgSelector",
            "type": "Microsoft.Solutions.ResourceSelector",
            "label": "Network Security Group",
            "defaultValue": "null",
            "toolTip": "Choose an existing NSG",
            "resourceType": "Microsoft.Network/NetworkSecurityGroups",
            "options": {
              "filter": {
                "subscription": "onBasics",
                "location": "onBasics"
              }
            },
            "constraints": {
              "required": true
            },
            "visible": "[equals(steps('network').NSG, false)]"
          },
          {
            "name": "NSGName",
            "type": "Microsoft.Common.TextBox",
            "label": "Name",
            "defaultValue": "[concat(basics('gatewayNameUi') , '-nsg')]",
            "toolTip": "Insert Name for the new NSG",
            "multiLine": false,
            "constraints": {
              "required": "[steps('network').NSG]",
              "regex": "^[a-z0-9A-Z-]{1,30}$",
              "validationMessage": "Only alphanumeric characters are allowed, and the name must be 1-30 characters long."
            },
            "visible": "[steps('network').NSG]"
          }
        ]
      },
      {
        "name": "tags",
        "label": "Tags",
        "elements": [
          {
            "name": "tagsByResource",
            "type": "Microsoft.Common.TagsByResource",
            "toolTip": "Create Azure tags for the new resources",
            "resources": [
              "Microsoft.Storage/storageAccounts",
              "Microsoft.Network/publicIPAddresses",
              "Microsoft.Compute/virtualMachines",
              "Microsoft.Network/networkSecurityGroups",
              "Microsoft.Network/networkInterfaces",
              "Microsoft.Network/routeTables",
              "Microsoft.Network/virtualNetworks"
            ]
          }
        ]
      }
    ],
    "outputs": {
      "location": "[location()]",
      "cloudGuardVersion": "[concat(steps('chkp').cloudGuardVersion, ' - ', coalesce(steps('chkp').R80Offer, 'Bring Your Own License'))]",
      "adminPassword": "[basics('auth').password]",
      "authenticationType": "[basics('auth').authenticationType]",
      "sshPublicKey": "[basics('auth').sshPublicKey]",
      "vmName": "[basics('gatewayNameUi')]",
      "vmSize": "[coalesce(steps('chkp').R8040vmSizeUiBYOL, steps('chkp').R8040vmSizeUiMGMT25, steps('chkp').R81vmSizeUiBYOL, steps('chkp').R81vmSizeUiMGMT25, steps('chkp').R8110vmSizeUiBYOL, steps('chkp').R8110vmSizeUiMGMT25, steps('chkp').R8120vmSizeUiBYOL, steps('chkp').R8120vmSizeUiMGMT25)]",
      "virtualNetworkName": "[steps('network').virtualNetwork.name]",
      "virtualNetworkAddressPrefix": "[steps('network').virtualNetwork.addressPrefix]",
      "Subnet1Name": "[steps('network').virtualNetwork.subnets.subnet1.name]",
      "Subnet1Prefix": "[steps('network').virtualNetwork.subnets.subnet1.addressPrefix]",
      "Subnet1StartAddress": "[steps('network').virtualNetwork.subnets.subnet1.startAddress]",
      "vnetNewOrExisting": "[steps('network').virtualNetwork.newOrExisting]",
      "virtualNetworkExistingRGName": "[steps('network').virtualNetwork.resourceGroup]",
      "managementGUIClientNetwork": "[steps('chkp').managementGUIClientNetwork]",
      "installationType": "[steps('chkp').installationType]",
      "bootstrapScript": "[steps('chkp').bootstrapScript]",
      "allowDownloadFromUploadToCheckPoint": "[coalesce(steps('chkp').allowUploadDownload, 'true')]",
      "additionalDiskSizeGB": "[int(steps('chkp').additionalDiskSizeGB)]",
      "diskType": "[if(contains('R80.40 R81 R81.10' , steps('chkp').cloudGuardVersion) , steps('chkp').VMDiskTypeOldVersions , steps('chkp').VMDiskType)]",
      "sourceImageVhdUri": "[coalesce(steps('chkp').sourceImageVhdUri, 'noCustomUri')]",
      "enableApi": "[steps('chkp').enableApi]",
      "adminShell": "[steps('chkp').adminShell]",
      "tagsByResource": "[steps('tags').tagsByResource]",
      "deployNewNSG": "[steps('network').NSG]",
      "ExistingNSG": "[steps('network').nsgSelector]",
      "NewNsgName": "[steps('network').NSGName]"
    }
  }
}