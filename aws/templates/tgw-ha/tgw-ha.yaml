AWSTemplateFormatVersion: 2010-09-09
Description: Deploys a Check Point TGW HA Cluster into an existing VPC (20211212)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: VPC Network Configuration
        Parameters:
          - VPC
          - PublicSubnetA
          - PublicSubnetB
          - PrivateSubnetA
          - PrivateSubnetB
          - TgwHASubnetA
          - TgwHASubnetB
          - InternalRouteTable
      - Label:
          default: EC2 Instance Configuration
        Parameters:
          - GatewayName
          - GatewayInstanceType
          - KeyName
          - AllocatePublicAddress
          - VolumeSize
          - VolumeType
          - VolumeEncryption
          - EnableInstanceConnect
          - GatewayPredefinedRole
          - TerminationProtection
      - Label:
          default: Check Point Settings
        Parameters:
          - GatewayVersion
          - Shell
          - GatewayPasswordHash
          - GatewaySICKey
      - Label:
          default: Advanced Settings
        Parameters:
          - ResourcesTagName
          - GatewayHostname
          - AllowUploadDownload
          - CloudWatch
          - GatewayBootstrapScript
          - NTPPrimary
          - NTPSecondary
    ParameterLabels:
      VPC:
        default: VPC
      PublicSubnetA:
        default: Public subnet 1
      PublicSubnetB:
        default: Public subnet 2
      PrivateSubnetA:
        default: Private subnet 1
      PrivateSubnetB:
        default: Private subnet 2
      TgwHASubnetA:
        default: TGW HA subnet 1
      TgwHASubnetB:
        default: TGW HA subnet 2
      InternalRouteTable:
        default: Internal route table
      GatewayName:
        default: Gateway Name
      GatewayInstanceType:
        default: Security Gateways instance type
      KeyName:
        default: Key name
      AllocatePublicAddress:
        default: Allocate Elastic IPs for cluster members
      VolumeSize:
        default: Root volume size (GB)
      VolumeType:
        default: Volume Type
      VolumeEncryption:
        default: Volume encryption KMS key identifier
      EnableInstanceConnect:
        default: Enable AWS Instance Connect
      GatewayPredefinedRole:
        default: Existing IAM role name
      TerminationProtection:
        default: Termination Protection
      GatewayVersion:
        default: Gateways version & license
      Shell:
        default: Admin shell
      GatewayPasswordHash:
        default: Password hash
      GatewaySICKey:
        default: SIC key
      ResourcesTagName:
        default: Resources prefix tag
      GatewayHostname:
        default: Gateway Hostname
      AllowUploadDownload:
        default: Allow upload & download
      CloudWatch:
        default: CloudWatch metrics
      GatewayBootstrapScript:
        default: Bootstrap Script
      NTPPrimary:
        default: Primary NTP server
      NTPSecondary:
        default: Secondary NTP server
Parameters:
  VPC:
    Description: Select an existing VPC.
    Type: AWS::EC2::VPC::Id
    MinLength: 1
    ConstraintDescription: you must select a VPC.
  PublicSubnetA:
    Description: Select a public subnet for the first Security Gateway.
    Type: AWS::EC2::Subnet::Id
    MinLength: 1
    ConstraintDescription: you must select a public subnet for the first Security Gateway.
  PublicSubnetB:
    Description: Select a public subnet for the second Security Gateway.
    Type: AWS::EC2::Subnet::Id
    MinLength: 1
    ConstraintDescription: you must select a public subnet for the second Security Gateway.
  PrivateSubnetA:
    Description: Select a private subnet for the first Security Gateway.
    Type: AWS::EC2::Subnet::Id
    MinLength: 1
    ConstraintDescription: you must select a private subnet for the first Security Gateway.
  PrivateSubnetB:
    Description: Select a private subnet for the second Security Gateway.
    Type: AWS::EC2::Subnet::Id
    MinLength: 1
    ConstraintDescription: you must select a private subnet for the second Security Gateway.
  TgwHASubnetA:
    Description: Select a TGW HA subnet for the first Security Gateway.
    Type: AWS::EC2::Subnet::Id
    MinLength: 1
    ConstraintDescription: you must select a TGW HA subnet for the first Security Gateway.
  TgwHASubnetB:
    Description: Select a TGW HA subnet for the second Security Gateway.
    Type: AWS::EC2::Subnet::Id
    MinLength: 1
    ConstraintDescription: you must select a TGW HAsubnet for the second Security Gateway.
  InternalRouteTable:
    Description: Set 0.0.0.0/0 route to the Active Cluster member instance in this route table (e.g. rtb-12a34567). Route table cannot have an existing 0.0.0.0/0 route. If empty - traffic will not be routed through the Security Cluster, this requires manual configuration in the Route Table. (optional)
    Type: String
    Default: ''
  GatewayName:
    Description: The name tag of the Security Gateway instances. (optional)
    Type: String
    Default: Check-Point-Cluster
  GatewayInstanceType:
    Type: String
    Default: c5.xlarge
    AllowedValues:
      - c4.large
      - c4.xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - c5n.large
      - c5n.xlarge
      - c5n.2xlarge
      - c5n.4xlarge
      - c5n.9xlarge
      - c5n.18xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m6i.large
      - m6i.xlarge
      - m6i.2xlarge
      - m6i.4xlarge
      - m6i.12xlarge
      - m6i.24xlarge
      - c6i.large
      - c6i.xlarge
      - c6i.2xlarge
      - c6i.4xlarge
      - c6i.12xlarge
      - c6i.24xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5a.large
      - r5a.xlarge
      - r5a.2xlarge
      - r5a.4xlarge
      - r5a.12xlarge
      - r5a.24xlarge
      - r5b.large
      - r5b.xlarge
      - r5b.2xlarge
      - r5b.4xlarge
      - r5b.12xlarge
      - r5b.24xlarge
      - r5n.large
      - r5n.xlarge
      - r5n.2xlarge
      - r5n.4xlarge
      - r5n.12xlarge
      - r5n.24xlarge
      - m6a.large
      - m6a.xlarge
      - m6a.2xlarge
      - m6a.4xlarge
      - m6a.12xlarge
      - m6a.24xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the Security Gateways.
    Type: AWS::EC2::KeyPair::KeyName
    MinLength: 1
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  AllocatePublicAddress:
    Description: When choosing "false", make sure the cluster members can connect to an ec2 endpoint.
    Default: true
    Type: String
    AllowedValues:
      - true
      - false
  VolumeSize:
    Type: Number
    Default: 100
    MinValue: 100
  VolumeType:
    Description: General Purpose SSD Volume Type
    Type: String
    Default: gp3
    AllowedValues:
      - gp3
      - gp2
  VolumeEncryption:
    Description: KMS or CMK key Identifier - Use key ID, alias or ARN. Key alias should be prefixed with 'alias/' (e.g. for KMS default alias 'aws/ebs' - insert 'alias/aws/ebs').
    Type: String
    Default: alias/aws/ebs
  EnableInstanceConnect:
    Description: Enable SSH connection over AWS web console.
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
  GatewayPredefinedRole:
    Description: A predefined IAM role to attach to the cluster profile. (optional)
    Type: String
    Default: ''
  TerminationProtection:
    Description: Prevents an instance from accidental termination.
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
  GatewayVersion:
    Description: The license to install on the Security Gateways.
    Type: String
    Default: R81.10-BYOL
    AllowedValues:
      - R80.40-BYOL
      - R80.40-PAYG-NGTP
      - R80.40-PAYG-NGTX
      - R81-BYOL
      - R81-PAYG-NGTP
      - R81-PAYG-NGTX
      - R81.10-BYOL
      - R81.10-PAYG-NGTP
      - R81.10-PAYG-NGTX
  Shell:
    Description: Change the admin shell to enable advanced command line configuration.
    Type: String
    Default: /etc/cli.sh
    AllowedValues:
      - /etc/cli.sh
      - /bin/bash
      - /bin/csh
      - /bin/tcsh
  GatewayPasswordHash:
    Description: Admin user's password hash (use command "openssl passwd -6 PASSWORD" to
      get the PASSWORD's hash). (optional)
    Type: String
    Default: ''
    AllowedPattern: '^[\$\./a-zA-Z0-9]*$'
    NoEcho: true
  GatewaySICKey:
    Description: The Secure Internal Communication key creates trusted connections between
      Check Point components. Choose a random string consisting of at least 8
      alphanumeric characters.
    Type: String
    AllowedPattern: '^[a-zA-Z0-9]{8,}$'
    ConstraintDescription: At least 8 alpha numeric characters.
    NoEcho: true
  ResourcesTagName:
    Description: Name tag prefix of the resources. (optional)
    Type: String
    Default: ''
  GatewayHostname:
    Description: The host name will be appended with member-a/b accordingly. (optional)
    Type: String
    Default: ''
    AllowedPattern: '^([A-Za-z]([-0-9A-Za-z]{0,61}[0-9A-Za-z]))?$'
    ConstraintDescription: A valid hostname label or an empty string.
  AllowUploadDownload:
    Description: >-
      Automatically download updates and share statistical data for product improvement purpose.
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  CloudWatch:
    Description: Report Check Point specific CloudWatch metrics.
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
  GatewayBootstrapScript:
    Description: An optional script with semicolon (;) separated commands to run on the initial boot. (optional)
    Type: String
    Default: ''
    NoEcho: true
  NTPPrimary:
    Description: (optional)
    Type: String
    Default: 169.254.169.123
    AllowedPattern: '^[\.a-zA-Z0-9\-]*$'
  NTPSecondary:
    Description: (optional)
    Type: String
    Default: 0.pool.ntp.org
    AllowedPattern: '^[\.a-zA-Z0-9\-]*$'
Conditions:
  AllocateAddress: !Equals [!Ref AllocatePublicAddress, true]
Resources:
  ClusterStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://cgi-cfts.s3.amazonaws.com/cluster/geo-cluster.yaml
      Parameters:
        VPC: !Ref VPC
        PublicSubnetA: !Ref PublicSubnetA
        PublicSubnetB: !Ref PublicSubnetB
        PrivateSubnetA: !Ref PrivateSubnetA
        PrivateSubnetB: !Ref PrivateSubnetB
        InternalRouteTable: !Ref InternalRouteTable
        GatewayName: !Ref GatewayName
        GatewayInstanceType: !Ref GatewayInstanceType
        KeyName: !Ref KeyName
        AllocatePublicAddress: !Ref AllocatePublicAddress
        VolumeSize: !Ref VolumeSize
        VolumeType: !Ref VolumeType
        VolumeEncryption: !Ref VolumeEncryption
        EnableInstanceConnect: !Ref EnableInstanceConnect
        GatewayPredefinedRole: !Ref GatewayPredefinedRole
        TerminationProtection: !Ref TerminationProtection
        GatewayVersion: !Ref GatewayVersion
        Shell: !Ref Shell
        GatewayPasswordHash: !Ref GatewayPasswordHash
        GatewaySICKey: !Ref GatewaySICKey
        ResourcesTagName: !Ref ResourcesTagName
        GatewayHostname: !Ref GatewayHostname
        AllowUploadDownload: !Ref AllowUploadDownload
        CloudWatch: !Ref CloudWatch
        GatewayBootstrapScript: !Ref GatewayBootstrapScript
        NTPPrimary: !Ref NTPPrimary
        NTPSecondary: !Ref NTPSecondary
  TGWRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: TGW Subnets
  TGWDefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: ClusterStack
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NetworkInterfaceId: !GetAtt ClusterStack.Outputs.MemberAExternalInterface
      RouteTableId: !Ref TGWRouteTable
  TGWNSubnet1RouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: TGWRouteTable
    Properties:
      RouteTableId: !Ref TGWRouteTable
      SubnetId: !Ref TgwHASubnetA
  TGWSubnet2RouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: TGWRouteTable
    Properties:
      RouteTableId: !Ref TGWRouteTable
      SubnetId: !Ref TgwHASubnetB
Outputs:
  MemberAPublicAddress:
    Condition: AllocateAddress
    Description: The public address of member A.
    Value: !GetAtt ClusterStack.Outputs.MemberAPublicAddress
  MemberASSH:
    Condition: AllocateAddress
    Description: SSH command to member A.
    Value: !GetAtt ClusterStack.Outputs.MemberASSH
  MemberAURL:
    Condition: AllocateAddress
    Description: URL to the member A portal.
    Value: !GetAtt ClusterStack.Outputs.MemberAURL
  MemberBPublicAddress:
    Condition: AllocateAddress
    Description: The public address of member B.
    Value: !GetAtt ClusterStack.Outputs.MemberBPublicAddress
  MemberBSSH:
    Condition: AllocateAddress
    Description: SSH command to member B.
    Value: !GetAtt ClusterStack.Outputs.MemberBSSH
  MemberBURL:
    Condition: AllocateAddress
    Description: URL to the member B portal.
    Value: !GetAtt ClusterStack.Outputs.MemberBURL
